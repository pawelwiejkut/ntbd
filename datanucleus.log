16:26:45,058 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
16:26:45,078 (main) DEBUG [DataNucleus.General] - Registering bundle org.sonatype.inject version 2.3.0 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar.
16:26:45,090 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
16:26:45,091 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
16:26:45,092 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.1.10 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar.
16:26:45,100 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar!/plugin.xml.
16:26:45,107 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar!/plugin.xml.
16:26:45,109 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.1.1 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar.
16:26:45,110 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
16:26:45,111 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
16:26:45,112 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.1.12 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar.
16:26:45,119 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar!/plugin.xml.
16:26:45,123 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar!/plugin.xml.
16:26:45,148 (main) DEBUG [DataNucleus.Persistence] - Java types support initialising ...
16:26:45,173 (main) DEBUG [DataNucleus.Persistence] - Java types support loaded : supported java types=[B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
16:26:45,174 (main) DEBUG [DataNucleus.Persistence] - Type converter support initialising ...
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - Type converter support loaded
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
16:26:45,188 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : java.lang.String,byte[],java.nio.ByteBuffer
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.String,java.lang.Double,java.nio.ByteBuffer
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.String,java.lang.Long,java.nio.ByteBuffer
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,[Ljava.lang.Object;,java.sql.Timestamp,java.util.Date
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
16:26:45,189 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
16:26:45,190 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
16:26:45,190 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (version 4.1.10) for API "JDO"
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-maven-plugin\4.0.0-release\datanucleus-maven-plugin-4.0.0-release.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.8\plexus-utils-3.0.8.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-inject-bean\2.3.0\sisu-inject-bean-2.3.0.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-guice\3.1.0\sisu-guice-3.1.0-no_aop.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-guava\0.9.9\sisu-guava-0.9.9.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\apache\xbean\xbean-reflect\3.4\xbean-reflect-3.4.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\log4j\log4j\1.2.12\log4j-1.2.12.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\commons-logging\commons-logging-api\1.1\commons-logging-api-1.1.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\collections\google-collections\1.0\google-collections-1.0.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\junit\junit\3.8.2\junit-3.8.2.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-core\4.1.10\datanucleus-core-4.1.10.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-api-jdo\4.1.1\datanucleus-api-jdo-4.1.1.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\jdo\jdo-api\3.1\jdo-api-3.1.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\transaction\transaction-api\1.1\transaction-api-1.1.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\jfairy\jfairy\0.3.0\jfairy-0.3.0.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\guava\guava\19.0\guava-19.0.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\iban4j\iban4j\2.1.1\iban4j-2.1.1.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\inject\extensions\guice-assistedinject\3.0\guice-assistedinject-3.0.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\joda-time\joda-time\2.3\joda-time-2.3.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-rdbms\4.1.12\datanucleus-rdbms-4.1.12.jar
16:26:45,191 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\h2database\h2\1.3.168\h2-1.3.168.jar
16:26:45,192 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
16:26:45,194 (main) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/META-INF/persistence.xml" using handler "persistence" (validation="false")
16:26:45,198 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Loading Metadata for persistence-unit "Tutorial" ...
16:26:45,246 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" has been specified with JDO annotations so using those.
16:26:45,249 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" has been specified with JDO annotations so using those.
16:26:45,251 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" has been specified with JDO annotations so using those.
16:26:45,252 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" has been specified with JDO annotations so using those.
16:26:45,252 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" has been specified with JDO annotations so using those.
16:26:45,253 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" has been specified with JDO annotations so using those.
16:26:45,254 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" has been specified with JDO annotations so using those.
16:26:45,254 (main) DEBUG [DataNucleus.MetaData] - Populating all MetaData ...
16:26:45,254 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Populating Meta-Data
16:26:45,257 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "city" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,257 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "street" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,257 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "postcode" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,257 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "department" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,257 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "person" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,258 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Populating Meta-Data
16:26:45,258 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" field "description" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,258 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" field "startDate" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,258 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" field "endDate" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,258 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" field "project" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Populating Meta-Data
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" field "name" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" field "head" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" field "address" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Populating Meta-Data
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "name" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "subject" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "task" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,259 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "employee" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "employee" : Has a Collection yet no element type is provided in MetaData nor is inferrable using generics, so using Object
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "task" : Has a Collection yet no element type is provided in MetaData nor is inferrable using generics, so using Object
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" : Populating Meta-Data
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" field "name" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" field "address" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" : Populating Meta-Data
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" field "applicationdate" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" field "position" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,260 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Populating Meta-Data
16:26:45,261 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "hiredate" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,261 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "job" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,261 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "salary" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,261 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "department" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,261 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "project" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
16:26:45,261 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "project" : Has a Collection yet no element type is provided in MetaData nor is inferrable using generics, so using Object
16:26:45,261 (main) DEBUG [DataNucleus.MetaData] - Initialising all MetaData ...
16:26:45,261 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Initialising Meta-Data
16:26:45,262 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Initialising Meta-Data
16:26:45,262 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Initialising Meta-Data
16:26:45,262 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Initialising Meta-Data
16:26:45,262 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" : Initialising Meta-Data
16:26:45,262 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" : Initialising Meta-Data
16:26:45,262 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Initialising Meta-Data
16:26:45,262 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Load of Metadata complete
16:26:45,267 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Address" starting ...
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnStateManager" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnInheritedFieldCount" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnFlags" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnFieldTypes" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnFieldNames" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnFieldFlags" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnPersistableSuperclass" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnReplaceField" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsTransactional" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnNewInstance" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnNewInstance" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnSuperClone" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnProvideFields" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "___dn$loadClass" but is required
16:26:45,283 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetManagedFieldCount" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsDirty" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnReplaceStateManager" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnReplaceFlags" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsDetached" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnMakeDirty" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnPersistableSuperclassInit" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsDeleted" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnFieldFlagsInit" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnFieldTypesInit" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnProvideField" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnPreSerialize" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetObjectId" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetVersion" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetTransactionalObjectId" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsNew" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyField" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetExecutionContext" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyFields" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnGetInheritedFieldCount" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsPersistent" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnReplaceFields" but is required
16:26:45,284 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnFieldNamesInit" but is required
16:26:45,290 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getDepartment changing field "employee.Address.department" for call to "dnGetdepartment()"
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setDepartment changing field "employee.Address.department" for call to "dnSetdepartment()"
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getCity changing field "employee.Address.city" for call to "dnGetcity()"
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setCity changing field "employee.Address.city" for call to "dnSetcity()"
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getStreet changing field "employee.Address.street" for call to "dnGetstreet()"
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setStreet changing field "employee.Address.street" for call to "dnSetstreet()"
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getPostcode changing field "employee.Address.postcode" for call to "dnGetpostcode()"
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setPostcode changing field "employee.Address.postcode" for call to "dnSetpostcode()"
16:26:45,293 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getPerson changing field "employee.Address.person" for call to "dnGetperson()"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setPerson changing field "employee.Address.person" for call to "dnSetperson()"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.city" for call to "dnGetcity()"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.street" for call to "dnGetstreet()"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.postcode" for call to "dnGetpostcode()"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.department" for call to "dnGetdepartment()"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.person" for call to "dnGetperson()"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
16:26:45,294 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
16:26:45,295 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
16:26:45,295 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
16:26:45,295 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
16:26:45,296 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
16:26:45,296 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
16:26:45,296 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
16:26:45,296 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
16:26:45,296 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
16:26:45,296 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
16:26:45,297 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
16:26:45,297 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
16:26:45,297 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
16:26:45,297 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
16:26:45,297 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
16:26:45,297 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
16:26:45,297 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
16:26:45,297 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
16:26:45,298 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
16:26:45,298 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
16:26:45,298 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
16:26:45,298 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
16:26:45,298 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
16:26:45,298 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
16:26:45,298 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
16:26:45,298 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
16:26:45,300 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Address obj, int index)"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
16:26:45,301 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
16:26:45,302 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
16:26:45,302 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
16:26:45,302 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetcity(employee.Address objPC)"
16:26:45,302 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetcity(employee.Address objPC, java.lang.String val)"
16:26:45,303 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Department dnGetdepartment(employee.Address objPC)"
16:26:45,303 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetdepartment(employee.Address objPC, employee.Department val)"
16:26:45,303 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Person dnGetperson(employee.Address objPC)"
16:26:45,303 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetperson(employee.Address objPC, employee.Person val)"
16:26:45,303 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetpostcode(employee.Address objPC)"
16:26:45,303 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetpostcode(employee.Address objPC, java.lang.String val)"
16:26:45,303 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetstreet(employee.Address objPC)"
16:26:45,303 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetstreet(employee.Address objPC, java.lang.String val)"
16:26:45,304 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Address.class" with enhanced definition
16:26:45,304 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Address" completed
16:26:45,304 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Task" starting ...
16:26:45,304 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnStateManager" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnInheritedFieldCount" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnFlags" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnFieldTypes" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnFieldNames" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnFieldFlags" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnPersistableSuperclass" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnReplaceField" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsTransactional" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnNewInstance" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnNewInstance" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnSuperClone" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnProvideFields" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "___dn$loadClass" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetManagedFieldCount" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsDirty" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnReplaceStateManager" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnReplaceFlags" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsDetached" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnMakeDirty" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnPersistableSuperclassInit" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsDeleted" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnFieldFlagsInit" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnFieldTypesInit" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnProvideField" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnPreSerialize" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetObjectId" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetVersion" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetTransactionalObjectId" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsNew" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,305 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyField" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetExecutionContext" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyFields" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnGetInheritedFieldCount" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsPersistent" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnReplaceFields" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnFieldNamesInit" but is required
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.getProject changing field "employee.Task.project" for call to "dnGetproject()"
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.setProject changing field "employee.Task.project" for call to "dnSetproject()"
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.getDescription changing field "employee.Task.description" for call to "dnGetdescription()"
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.setDescription changing field "employee.Task.description" for call to "dnSetdescription()"
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.getStartDate changing field "employee.Task.startDate" for call to "dnGetstartDate()"
16:26:45,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.setStartDate changing field "employee.Task.startDate" for call to "dnSetstartDate()"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.getEndDate changing field "employee.Task.endDate" for call to "dnGetendDate()"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.setEndDate changing field "employee.Task.endDate" for call to "dnSetendDate()"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.toString changing field "employee.Task.description" for call to "dnGetdescription()"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.toString changing field "employee.Task.startDate" for call to "dnGetstartDate()"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.toString changing field "employee.Task.endDate" for call to "dnGetendDate()"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.toString changing field "employee.Task.project" for call to "dnGetproject()"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
16:26:45,307 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
16:26:45,308 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Task obj, int index)"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
16:26:45,309 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
16:26:45,310 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetdescription(employee.Task objPC)"
16:26:45,310 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetdescription(employee.Task objPC, java.lang.String val)"
16:26:45,310 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Date dnGetendDate(employee.Task objPC)"
16:26:45,310 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetendDate(employee.Task objPC, java.util.Date val)"
16:26:45,310 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Project dnGetproject(employee.Task objPC)"
16:26:45,310 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetproject(employee.Task objPC, employee.Project val)"
16:26:45,310 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Date dnGetstartDate(employee.Task objPC)"
16:26:45,310 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetstartDate(employee.Task objPC, java.util.Date val)"
16:26:45,310 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Task.class" with enhanced definition
16:26:45,311 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Task" completed
16:26:45,311 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Department" starting ...
16:26:45,311 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
16:26:45,311 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnStateManager" but is required
16:26:45,311 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnInheritedFieldCount" but is required
16:26:45,311 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnFlags" but is required
16:26:45,311 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnFieldTypes" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnFieldNames" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnFieldFlags" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnPersistableSuperclass" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnReplaceField" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsTransactional" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnNewInstance" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnNewInstance" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnSuperClone" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnProvideFields" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "___dn$loadClass" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetManagedFieldCount" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsDirty" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnReplaceStateManager" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnReplaceFlags" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsDetached" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnMakeDirty" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnPersistableSuperclassInit" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsDeleted" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnFieldFlagsInit" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnFieldTypesInit" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnProvideField" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnPreSerialize" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetObjectId" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetVersion" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetTransactionalObjectId" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsNew" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyField" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetExecutionContext" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyFields" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnGetInheritedFieldCount" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsPersistent" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnReplaceFields" but is required
16:26:45,312 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnFieldNamesInit" but is required
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.getName changing field "employee.Department.name" for call to "dnGetname()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.getHead changing field "employee.Department.head" for call to "dnGethead()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.setName changing field "employee.Department.name" for call to "dnSetname()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.setHead changing field "employee.Department.head" for call to "dnSethead()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.getAddress changing field "employee.Department.address" for call to "dnGetaddress()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.setAddress changing field "employee.Department.address" for call to "dnSetaddress()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.toString changing field "employee.Department.name" for call to "dnGetname()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.toString changing field "employee.Department.head" for call to "dnGethead()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.toString changing field "employee.Department.address" for call to "dnGetaddress()"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
16:26:45,313 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
16:26:45,314 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Department obj, int index)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
16:26:45,315 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
16:26:45,316 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
16:26:45,316 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Address dnGetaddress(employee.Department objPC)"
16:26:45,316 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetaddress(employee.Department objPC, employee.Address val)"
16:26:45,316 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Employee dnGethead(employee.Department objPC)"
16:26:45,316 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSethead(employee.Department objPC, employee.Employee val)"
16:26:45,316 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetname(employee.Department objPC)"
16:26:45,316 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetname(employee.Department objPC, java.lang.String val)"
16:26:45,316 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Department.class" with enhanced definition
16:26:45,316 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Department" completed
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Project" starting ...
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnStateManager" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnInheritedFieldCount" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnFlags" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnFieldTypes" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnFieldNames" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnFieldFlags" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnPersistableSuperclass" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnReplaceField" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsTransactional" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnNewInstance" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnNewInstance" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnSuperClone" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnProvideFields" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "___dn$loadClass" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetManagedFieldCount" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsDirty" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnReplaceStateManager" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnReplaceFlags" but is required
16:26:45,317 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsDetached" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnMakeDirty" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnPersistableSuperclassInit" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsDeleted" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnFieldFlagsInit" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnFieldTypesInit" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnProvideField" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnPreSerialize" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetObjectId" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetVersion" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetTransactionalObjectId" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsNew" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyField" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetExecutionContext" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyFields" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnGetInheritedFieldCount" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsPersistent" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnReplaceFields" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnFieldNamesInit" but is required
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getName changing field "employee.Project.name" for call to "dnGetname()"
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.setName changing field "employee.Project.name" for call to "dnSetname()"
16:26:45,318 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getSubject changing field "employee.Project.subject" for call to "dnGetsubject()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.setSubject changing field "employee.Project.subject" for call to "dnSetsubject()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getTask changing field "employee.Project.task" for call to "dnGettask()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getTask changing field "employee.Project.task" for call to "dnSettask()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getTask changing field "employee.Project.task" for call to "dnGettask()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getEmployee changing field "employee.Project.employee" for call to "dnGetemployee()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getEmployee changing field "employee.Project.employee" for call to "dnSetemployee()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getEmployee changing field "employee.Project.employee" for call to "dnGetemployee()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.toString changing field "employee.Project.name" for call to "dnGetname()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.toString changing field "employee.Project.subject" for call to "dnGetsubject()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.toString changing field "employee.Project.task" for call to "dnGettask()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.toString changing field "employee.Project.employee" for call to "dnGetemployee()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
16:26:45,319 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
16:26:45,320 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Project obj, int index)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Set dnGetemployee(employee.Project objPC)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetemployee(employee.Project objPC, java.util.Set val)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetname(employee.Project objPC)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetname(employee.Project objPC, java.lang.String val)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetsubject(employee.Project objPC)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetsubject(employee.Project objPC, java.lang.String val)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Set dnGettask(employee.Project objPC)"
16:26:45,321 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSettask(employee.Project objPC, java.util.Set val)"
16:26:45,322 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Project.class" with enhanced definition
16:26:45,322 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Project" completed
16:26:45,322 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Person" starting ...
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have field "dnStateManager" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have field "dnInheritedFieldCount" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have field "dnFlags" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have field "dnFieldTypes" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have field "dnFieldNames" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have field "dnFieldFlags" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have field "dnPersistableSuperclass" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnReplaceField" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnIsTransactional" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnNewInstance" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnNewInstance" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnSuperClone" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnProvideFields" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "___dn$loadClass" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnGetManagedFieldCount" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnIsDirty" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnReplaceStateManager" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnReplaceFlags" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnIsDetached" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnMakeDirty" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "__dnPersistableSuperclassInit" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnIsDeleted" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "__dnFieldFlagsInit" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "__dnFieldTypesInit" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnProvideField" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnPreSerialize" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnGetObjectId" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnGetVersion" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnGetTransactionalObjectId" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnIsNew" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnCopyField" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnGetExecutionContext" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnCopyFields" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "__dnGetInheritedFieldCount" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnNewObjectIdInstance" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnIsPersistent" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "dnReplaceFields" but is required
16:26:45,323 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Person" doesnt have method "__dnFieldNamesInit" but is required
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Person.getName changing field "employee.Person.name" for call to "dnGetname()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Person.setName changing field "employee.Person.name" for call to "dnSetname()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Person.getAddress changing field "employee.Person.address" for call to "dnGetaddress()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Person.setAddress changing field "employee.Person.address" for call to "dnSetaddress()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Person.toString changing field "employee.Person.name" for call to "dnGetname()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Person.toString changing field "employee.Person.address" for call to "dnGetaddress()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
16:26:45,324 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Person obj, int index)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
16:26:45,325 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Address dnGetaddress(employee.Person objPC)"
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetaddress(employee.Person objPC, employee.Address val)"
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetname(employee.Person objPC)"
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetname(employee.Person objPC, java.lang.String val)"
16:26:45,326 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Person.class" with enhanced definition
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Person" completed
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Applicant" starting ...
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have field "dnInheritedFieldCount" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have field "dnFieldTypes" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have field "dnFieldNames" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have field "dnFieldFlags" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have field "dnPersistableSuperclass" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnReplaceField" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnNewInstance" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnNewInstance" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnSuperClone" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "___dn$loadClass" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnGetManagedFieldCount" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnIsDetached" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnCopyField" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnCopyFields" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "__dnGetInheritedFieldCount" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "__dnPersistableSuperclassInit" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "__dnFieldFlagsInit" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "__dnFieldTypesInit" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "dnProvideField" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Applicant" doesnt have method "__dnFieldNamesInit" but is required
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
16:26:45,326 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Applicant.getApplicationdate changing field "employee.Applicant.applicationdate" for call to "dnGetapplicationdate()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Applicant.setApplicationdate changing field "employee.Applicant.applicationdate" for call to "dnSetapplicationdate()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Applicant.getPosition changing field "employee.Applicant.position" for call to "dnGetposition()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Applicant.setPosition changing field "employee.Applicant.position" for call to "dnSetposition()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Applicant.toString changing field "employee.Applicant.applicationdate" for call to "dnGetapplicationdate()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Applicant.toString changing field "employee.Applicant.position" for call to "dnGetposition()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Applicant obj, int index)"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
16:26:45,327 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
16:26:45,328 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
16:26:45,328 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Date dnGetapplicationdate(employee.Applicant objPC)"
16:26:45,328 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetapplicationdate(employee.Applicant objPC, java.util.Date val)"
16:26:45,328 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetposition(employee.Applicant objPC)"
16:26:45,328 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetposition(employee.Applicant objPC, java.lang.String val)"
16:26:45,328 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Applicant.class" with enhanced definition
16:26:45,328 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Applicant" completed
16:26:45,328 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Employee" starting ...
16:26:45,328 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnInheritedFieldCount" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnFieldTypes" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnFieldNames" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnFieldFlags" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnPersistableSuperclass" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnReplaceField" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnNewInstance" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnNewInstance" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnSuperClone" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "___dn$loadClass" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnGetManagedFieldCount" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnIsDetached" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnCopyField" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnCopyFields" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnGetInheritedFieldCount" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnPersistableSuperclassInit" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnFieldFlagsInit" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnFieldTypesInit" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnProvideField" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnFieldNamesInit" but is required
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getDepartment changing field "employee.Employee.department" for call to "dnGetdepartment()"
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getHiredate changing field "employee.Employee.hiredate" for call to "dnGethiredate()"
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getJob changing field "employee.Employee.job" for call to "dnGetjob()"
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getSalary changing field "employee.Employee.salary" for call to "dnGetsalary()"
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setDepartment changing field "employee.Employee.department" for call to "dnSetdepartment()"
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setHiredate changing field "employee.Employee.hiredate" for call to "dnSethiredate()"
16:26:45,329 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setJob changing field "employee.Employee.job" for call to "dnSetjob()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setSalary changing field "employee.Employee.salary" for call to "dnSetsalary()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getProject changing field "employee.Employee.project" for call to "dnGetproject()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getProject changing field "employee.Employee.project" for call to "dnSetproject()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getProject changing field "employee.Employee.project" for call to "dnGetproject()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.hiredate" for call to "dnGethiredate()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.job" for call to "dnGetjob()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.salary" for call to "dnGetsalary()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.department" for call to "dnGetdepartment()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.project" for call to "dnGetproject()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Employee obj, int index)"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
16:26:45,330 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Department dnGetdepartment(employee.Employee objPC)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetdepartment(employee.Employee objPC, employee.Department val)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Date dnGethiredate(employee.Employee objPC)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSethiredate(employee.Employee objPC, java.util.Date val)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetjob(employee.Employee objPC)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetjob(employee.Employee objPC, java.lang.String val)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Set dnGetproject(employee.Employee objPC)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetproject(employee.Employee objPC, java.util.Set val)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "double dnGetsalary(employee.Employee objPC)"
16:26:45,331 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetsalary(employee.Employee objPC, double val)"
16:26:45,331 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Employee.class" with enhanced definition
16:26:45,332 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Employee" completed
16:26:45,332 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer completed with success for 7 classes.
16:26:45,514 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creation of the schema for classes
16:26:45,514 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
16:26:45,514 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-maven-plugin\4.0.0-release\datanucleus-maven-plugin-4.0.0-release.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.8\plexus-utils-3.0.8.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-inject-bean\2.3.0\sisu-inject-bean-2.3.0.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-guice\3.1.0\sisu-guice-3.1.0-no_aop.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-guava\0.9.9\sisu-guava-0.9.9.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\apache\xbean\xbean-reflect\3.4\xbean-reflect-3.4.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\log4j\log4j\1.2.12\log4j-1.2.12.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\commons-logging\commons-logging-api\1.1\commons-logging-api-1.1.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\collections\google-collections\1.0\google-collections-1.0.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\junit\junit\3.8.2\junit-3.8.2.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-core\4.1.10\datanucleus-core-4.1.10.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-api-jdo\4.1.1\datanucleus-api-jdo-4.1.1.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\jdo\jdo-api\3.1\jdo-api-3.1.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\transaction\transaction-api\1.1\transaction-api-1.1.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\jfairy\jfairy\0.3.0\jfairy-0.3.0.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\guava\guava\19.0\guava-19.0.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\iban4j\iban4j\2.1.1\iban4j-2.1.1.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\inject\extensions\guice-assistedinject\3.0\guice-assistedinject-3.0.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\joda-time\joda-time\2.3\joda-time-2.3.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar
16:26:45,515 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-rdbms\4.1.12\datanucleus-rdbms-4.1.12.jar
16:26:45,516 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\h2database\h2\1.3.168\h2-1.3.168.jar
16:26:45,525 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
16:26:45,539 (main) DEBUG [DataNucleus.General] - Registering bundle org.sonatype.inject version 2.3.0 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar.
16:26:45,543 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
16:26:45,544 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
16:26:45,544 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.1.10 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar.
16:26:45,552 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar!/plugin.xml.
16:26:45,560 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar!/plugin.xml.
16:26:45,562 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.1.1 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar.
16:26:45,564 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
16:26:45,564 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
16:26:45,565 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.1.12 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar.
16:26:45,575 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar!/plugin.xml.
16:26:45,580 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar!/plugin.xml.
16:26:45,600 (main) DEBUG [DataNucleus.Persistence] - Java types support initialising ...
16:26:45,627 (main) DEBUG [DataNucleus.Persistence] - Java types support loaded : supported java types=[B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
16:26:45,627 (main) DEBUG [DataNucleus.Persistence] - Type converter support initialising ...
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - Type converter support loaded
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : java.lang.String,byte[],java.nio.ByteBuffer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
16:26:45,642 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.String,java.lang.Double,java.nio.ByteBuffer
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.String,java.lang.Long,java.nio.ByteBuffer
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,java.util.Date,[Ljava.lang.Object;
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
16:26:45,643 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=true
16:26:45,643 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
16:26:45,648 (main) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/META-INF/persistence.xml" using handler "persistence" (validation="false")
16:26:45,654 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Loading Metadata for persistence-unit "Tutorial" ...
16:26:45,702 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" has been specified with JDO annotations so using those.
16:26:45,708 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" has been specified with JDO annotations so using those.
16:26:45,710 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" has been specified with JDO annotations so using those.
16:26:45,711 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" has been specified with JDO annotations so using those.
16:26:45,712 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" has been specified with JDO annotations so using those.
16:26:45,713 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" has been specified with JDO annotations so using those.
16:26:45,714 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" has been specified with JDO annotations so using those.
16:26:45,714 (main) DEBUG [DataNucleus.MetaData] - Populating all MetaData ...
16:26:45,714 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Populating Meta-Data
16:26:45,715 (main) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" NOT found at /META-INF/package-h2.orm
16:26:45,715 (main) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" NOT found at /WEB-INF/package-h2.orm
16:26:45,716 (main) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/package-h2.orm" using handler "jdo" (validation="false")
16:26:45,720 (main) DEBUG [DataNucleus.MetaData] - XML Entity Public="" System="file:/javax/jdo/orm.dtd" : using local source "/org/datanucleus/api/jdo/jdo_orm_3_1.dtd"
16:26:45,729 (main) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" will use file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/package-h2.orm
16:26:45,729 (main) DEBUG [DataNucleus.MetaData] - File "" is having internal MetaData definition updated with ORM information
16:26:45,729 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" is having internal MetaData definition updated with ORM information
16:26:45,730 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Populating Meta-Data
16:26:45,730 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" is having internal MetaData definition updated with ORM information
16:26:45,731 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Populating Meta-Data
16:26:45,731 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" is having internal MetaData definition updated with ORM information
16:26:45,731 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Populating Meta-Data
16:26:45,731 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" is having internal MetaData definition updated with ORM information
16:26:45,731 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" : Populating Meta-Data
16:26:45,731 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" is having internal MetaData definition updated with ORM information
16:26:45,732 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" : Populating Meta-Data
16:26:45,732 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" is having internal MetaData definition updated with ORM information
16:26:45,732 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Populating Meta-Data
16:26:45,732 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" is having internal MetaData definition updated with ORM information
16:26:45,732 (main) DEBUG [DataNucleus.MetaData] - Initialising all MetaData ...
16:26:45,733 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Initialising Meta-Data
16:26:45,733 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Initialising Meta-Data
16:26:45,733 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Initialising Meta-Data
16:26:45,733 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Initialising Meta-Data
16:26:45,733 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Person" : Initialising Meta-Data
16:26:45,734 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" : Initialising Meta-Data
16:26:45,734 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Initialising Meta-Data
16:26:45,734 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Load of Metadata complete
16:26:45,734 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
16:26:45,761 (main) DEBUG [DataNucleus.Connection] - Created tx data source using pooling type of dbcp-builtin
16:26:45,761 (main) DEBUG [DataNucleus.Connection] - Registered transactional connection factory under name "rdbms/tx"
16:26:45,761 (main) DEBUG [DataNucleus.Connection] - Registered nontransactional connection factory under name "rdbms/nontx"
16:26:45,781 (main) DEBUG [DataNucleus.Connection] - Created nontx data source using pooling type of dbcp-builtin
16:26:45,827 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1f924f5 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened
16:26:45,849 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:45,849 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=true)
16:26:45,849 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
16:26:45,850 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
16:26:45,850 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
16:26:45,850 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
16:26:45,851 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
16:26:45,851 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
16:26:45,851 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
16:26:45,852 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
16:26:45,852 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
16:26:45,852 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
16:26:45,852 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
16:26:45,852 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
16:26:45,852 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
16:26:45,853 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
16:26:45,854 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
16:26:45,854 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:45,854 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:45,856 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
16:26:45,856 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
16:26:45,857 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
16:26:45,859 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
16:26:45,859 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
16:26:45,859 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
16:26:45,859 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
16:26:45,859 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
16:26:45,859 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:45,860 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:45,861 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
16:26:45,861 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
16:26:45,861 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
16:26:45,861 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
16:26:45,861 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:45,861 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:45,861 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:45,861 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
16:26:45,865 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
16:26:45,865 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
16:26:45,865 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
16:26:45,866 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
16:26:45,866 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
16:26:45,866 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
16:26:45,866 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
16:26:45,866 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:45,866 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:45,869 (main) DEBUG [DataNucleus.Datastore] - Removing RDBMS support for Java type java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
16:26:45,869 (main) DEBUG [DataNucleus.Datastore] - Removing RDBMS support for Java type java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
16:26:45,882 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DELETEME1460989605879.UNUSED" added to internal representation of table.
16:26:45,883 (main) DEBUG [DataNucleus.Datastore.Schema] - Creating table DELETEME1460989605879
16:26:45,885 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE DELETEME1460989605879
(
    UNUSED INTEGER NOT NULL
)
16:26:45,885 (main) DEBUG [DataNucleus.Datastore.Schema] - Execution Time = 0 ms
16:26:45,887 (main) DEBUG [DataNucleus.Datastore.Schema] - Dropping table DELETEME1460989605879
16:26:45,887 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE DELETEME1460989605879
16:26:45,887 (main) DEBUG [DataNucleus.Datastore.Schema] - Execution Time = 0 ms
16:26:45,887 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
16:26:45,887 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
16:26:45,887 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
16:26:45,887 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
16:26:45,887 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
16:26:45,887 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
16:26:45,887 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
16:26:45,887 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.H2Adapter
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="H2" version="1.3.168 (2012-07-13)"
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="H2 JDBC Driver" version="1.3.168 (2012-07-13)"
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:h2:tcp://localhost/~/IdeaProjects/ntbd/data/db]
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:h2:tcp://localhost/~/IdeaProjects/ntbd/data/db]
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case=UPPERCASE catalog=DB schema=PUBLIC
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : "MixedCase" UPPERCASE "MixedCase-Sensitive" 
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=128 Column=128 Constraint=128 Index=128 Delimiter="
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=true
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, BOOLEAN, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, [id=-10], CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, ARRAY, REAL, OTHER, DOUBLE, DATE, TIME, TIMESTAMP
16:26:45,888 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
16:26:45,888 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1f924f5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3a5fd2, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
16:26:45,888 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1f924f5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3a5fd2, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
16:26:45,889 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
16:26:45,890 (main) DEBUG [DataNucleus.Cache] - Level 2 Cache of type "soft" initialised
16:26:45,890 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Version "4.1.10" with JRE "1.8.0_77" on "Windows 10"
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - Persistence-Unit : Tutorial
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : default
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Belgrade
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
16:26:45,893 (main) DEBUG [DataNucleus.Persistence] - ================================================
16:26:45,893 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Handling schema for persistence-unit "Tutorial"
16:26:45,903 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Task [Table : TASK, InheritanceStrategy : new-table]
16:26:45,903 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.TASK_ID" added to internal representation of table.
16:26:45,904 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [TASK.TASK_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,905 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Project [Table : PROJECTS, InheritanceStrategy : new-table]
16:26:45,905 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.PROJECTS_ID" added to internal representation of table.
16:26:45,905 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [PROJECTS.PROJECTS_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,905 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Person [Table : PERSON, InheritanceStrategy : new-table]
16:26:45,905 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PERSON.PERSON_ID" added to internal representation of table.
16:26:45,905 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [PERSON.PERSON_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,905 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Employee [Table : EMPLOYEES, InheritanceStrategy : new-table]
16:26:45,905 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.EMPLOYEES_ID" added to internal representation of table.
16:26:45,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [EMPLOYEES.EMPLOYEES_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,906 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Department [Table : DEPARTMENT, InheritanceStrategy : new-table]
16:26:45,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.DEPARTMENT_ID" added to internal representation of table.
16:26:45,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [DEPARTMENT.DEPARTMENT_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,906 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Address [Table : ADDRESS, InheritanceStrategy : new-table]
16:26:45,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.ADDRESS_ID" added to internal representation of table.
16:26:45,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [ADDRESS.ADDRESS_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,906 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Applicant [Table : APPLICANT, InheritanceStrategy : new-table]
16:26:45,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "APPLICANT.APPLICANT_ID" added to internal representation of table.
16:26:45,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [APPLICANT.APPLICANT_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Table TASK will manage the persistence of the fields for class employee.Task (inheritance strategy="new-table") 
16:26:45,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.DESCRIPTION" added to internal representation of table.
16:26:45,910 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.description] -> Column(s) [TASK.DESCRIPTION] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,910 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.ENDDATE" added to internal representation of table.
16:26:45,910 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.endDate] -> Column(s) [TASK.ENDDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
16:26:45,911 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.PROJECT_PROJECTS_ID_OID" added to internal representation of table.
16:26:45,911 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.project] -> Column(s) [TASK.PROJECT_PROJECTS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,911 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.STARTDATE" added to internal representation of table.
16:26:45,911 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.startDate] -> Column(s) [TASK.STARTDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
16:26:45,911 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View TASK has been initialised
16:26:45,911 (main) DEBUG [DataNucleus.Datastore.Schema] - Table ADDRESS will manage the persistence of the fields for class employee.Address (inheritance strategy="new-table") 
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.CITY" added to internal representation of table.
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.city] -> Column(s) [ADDRESS.CITY] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.DEPARTMENT_DEPARTMENT_ID_OID" added to internal representation of table.
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.department] -> Column(s) [ADDRESS.DEPARTMENT_DEPARTMENT_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.PERSON_PERSON_ID_OID" added to internal representation of table.
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.person] -> Column(s) [ADDRESS.PERSON_PERSON_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.POSTCODE" added to internal representation of table.
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.postcode] -> Column(s) [ADDRESS.POSTCODE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.STREET" added to internal representation of table.
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.street] -> Column(s) [ADDRESS.STREET] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View ADDRESS has been initialised
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Table DEPARTMENT will manage the persistence of the fields for class employee.Department (inheritance strategy="new-table") 
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.ADDRESS_ADDRESS_ID_OID" added to internal representation of table.
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.address] -> Column(s) [DEPARTMENT.ADDRESS_ADDRESS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.HEAD_EMPLOYEES_ID_OID" added to internal representation of table.
16:26:45,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.head] -> Column(s) [DEPARTMENT.HEAD_EMPLOYEES_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT."NAME"" added to internal representation of table.
16:26:45,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.name] -> Column(s) [DEPARTMENT."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View DEPARTMENT has been initialised
16:26:45,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Table PROJECTS will manage the persistence of the fields for class employee.Project (inheritance strategy="new-table") 
16:26:45,916 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Field : employee.Project.employee [Table : PROJECT_EMPLOYEE]
16:26:45,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.employee] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
16:26:45,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS."NAME"" added to internal representation of table.
16:26:45,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.name] -> Column(s) [PROJECTS."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.SUBJECT" added to internal representation of table.
16:26:45,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.subject] -> Column(s) [PROJECTS.SUBJECT] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.task] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.TASK_PROJECTS_ID_OID" added to internal representation of table.
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View PROJECTS has been initialised
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Table PERSON will manage the persistence of the fields for class employee.Person (inheritance strategy="new-table") 
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PERSON.ADDRESS" added to internal representation of table.
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Person.address] -> Column(s) [PERSON.ADDRESS] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PERSON."NAME"" added to internal representation of table.
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Person.name] -> Column(s) [PERSON."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View PERSON has been initialised
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Table APPLICANT will manage the persistence of the fields for class employee.Applicant (inheritance strategy="new-table") 
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "APPLICANT.APPLICATIONDATE" added to internal representation of table.
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Applicant.applicationdate] -> Column(s) [APPLICANT.APPLICATIONDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "APPLICANT."POSITION"" added to internal representation of table.
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Applicant.position] -> Column(s) [APPLICANT."POSITION"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View APPLICANT has been initialised
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Table EMPLOYEES will manage the persistence of the fields for class employee.Employee (inheritance strategy="new-table") 
16:26:45,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.DEPARTMENT" added to internal representation of table.
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.department] -> Column(s) [EMPLOYEES.DEPARTMENT] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.HIREDATE" added to internal representation of table.
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.hiredate] -> Column(s) [EMPLOYEES.HIREDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.JOB" added to internal representation of table.
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.job] -> Column(s) [EMPLOYEES.JOB] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:45,918 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Field : employee.Employee.project [Table : EMPLOYEE_PROJECT]
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.project] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.SALARY" added to internal representation of table.
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.salary] -> Column(s) [EMPLOYEES.SALARY] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DoubleMapping" (org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping)
16:26:45,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View EMPLOYEES has been initialised
16:26:45,920 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECT_EMPLOYEE.PROJECTS_ID_OID" added to internal representation of table.
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.employee.[OWNER]] -> Column(s) [PROJECT_EMPLOYEE.PROJECTS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECT_EMPLOYEE.EMPLOYEES_ID_EID" added to internal representation of table.
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.employee.[ELEMENT]] -> Column(s) [PROJECT_EMPLOYEE.EMPLOYEES_ID_EID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View PROJECT_EMPLOYEE has been initialised
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEE_PROJECT.EMPLOYEES_ID_OID" added to internal representation of table.
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.project.[OWNER]] -> Column(s) [EMPLOYEE_PROJECT.EMPLOYEES_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEE_PROJECT.PROJECTS_ID_EID" added to internal representation of table.
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.project.[ELEMENT]] -> Column(s) [EMPLOYEE_PROJECT.PROJECTS_ID_EID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:45,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View EMPLOYEE_PROJECT has been initialised
16:26:45,922 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@a2f921 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened with isolation level "serializable" and auto-commit=false
16:26:45,922 (main) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction started with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1c87521" with isolation "serializable"
16:26:45,923 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of TASK returned table type of TABLE
16:26:45,923 (main) DEBUG [DataNucleus.Datastore.Schema] - Loading column info for table(s) "TASK, PERSON, EMPLOYEES, PROJECTS, PROJECT_EMPLOYEE, ADDRESS, APPLICANT, EMPLOYEE_PROJECT, DEPARTMENT" in Catalog "", Schema ""
16:26:45,932 (main) DEBUG [DataNucleus.Datastore.Schema] - Column info loaded for Catalog "", Schema "", 9 tables, time = 9 ms
16:26:45,932 (main) DEBUG [DataNucleus.Datastore.Schema] - Column info retrieved for table "TASK" : 6 columns found
16:26:45,932 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of ADDRESS returned table type of TABLE
16:26:45,933 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of DEPARTMENT returned table type of TABLE
16:26:45,933 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of PROJECTS returned table type of TABLE
16:26:45,934 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of PERSON returned table type of TABLE
16:26:45,934 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of APPLICANT returned table type of TABLE
16:26:45,935 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of EMPLOYEES returned table type of TABLE
16:26:45,935 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of PROJECT_EMPLOYEE returned table type of TABLE
16:26:45,935 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of EMPLOYEE_PROJECT returned table type of TABLE
16:26:45,936 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table TASK
16:26:45,939 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table TASK
16:26:45,940 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table TASK
16:26:45,941 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table ADDRESS
16:26:45,941 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table ADDRESS
16:26:45,942 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table ADDRESS
16:26:45,942 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table DEPARTMENT
16:26:45,943 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table DEPARTMENT
16:26:45,943 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table DEPARTMENT
16:26:45,944 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 index(es) for table PROJECTS
16:26:45,944 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 0 foreign key(s) for table PROJECTS
16:26:45,945 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table PROJECTS
16:26:45,945 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 index(es) for table PERSON
16:26:45,946 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 foreign key(s) for table PERSON
16:26:45,946 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table PERSON
16:26:45,946 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 index(es) for table APPLICANT
16:26:45,947 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 foreign key(s) for table APPLICANT
16:26:45,947 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table APPLICANT
16:26:45,948 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 index(es) for table EMPLOYEES
16:26:45,948 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table EMPLOYEES
16:26:45,949 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table EMPLOYEES
16:26:45,949 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table PROJECT_EMPLOYEE
16:26:45,950 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table PROJECT_EMPLOYEE
16:26:45,951 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table PROJECT_EMPLOYEE
16:26:45,952 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table EMPLOYEE_PROJECT
16:26:45,952 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table EMPLOYEE_PROJECT
16:26:45,953 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table EMPLOYEE_PROJECT
16:26:45,953 (main) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction committing with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1c87521"
16:26:45,953 (main) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction closing with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1c87521"
16:26:45,953 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@a2f921 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1c87521, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
16:26:45,953 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@a2f921 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1c87521, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
16:26:45,954 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool completed successfully
16:26:45,954 (main) DEBUG [DataNucleus.Connection] - Closing Connection Pool tx
16:26:45,954 (main) DEBUG [DataNucleus.Connection] - Closing Connection Pool nontx
16:26:45,954 (main) DEBUG [DataNucleus.Persistence] - Unmanaging Persistence of all classes
16:26:46,170 (test.Lista5.main()) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
16:26:46,189 (test.Lista5.main()) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.1.10 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar.
16:26:46,206 (test.Lista5.main()) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar!/plugin.xml.
16:26:46,217 (test.Lista5.main()) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.10/datanucleus-core-4.1.10.jar!/plugin.xml.
16:26:46,220 (test.Lista5.main()) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.1.1 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar.
16:26:46,222 (test.Lista5.main()) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
16:26:46,223 (test.Lista5.main()) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
16:26:46,224 (test.Lista5.main()) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.1.12 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar.
16:26:46,233 (test.Lista5.main()) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar!/plugin.xml.
16:26:46,241 (test.Lista5.main()) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.12/datanucleus-rdbms-4.1.12.jar!/plugin.xml.
16:26:46,260 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Java types support initialising ...
16:26:46,289 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Java types support loaded : supported java types=[B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
16:26:46,289 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Type converter support initialising ...
16:26:46,312 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Type converter support loaded
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
16:26:46,313 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
16:26:46,314 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
16:26:46,315 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
16:26:46,319 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/META-INF/persistence.xml" using handler "persistence" (validation="false")
16:26:46,327 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - MetaData Management : Loading Metadata for persistence-unit "Tutorial" ...
16:26:46,358 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Address" has been specified with JDO annotations so using those.
16:26:46,361 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Task" has been specified with JDO annotations so using those.
16:26:46,362 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Department" has been specified with JDO annotations so using those.
16:26:46,363 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Project" has been specified with JDO annotations so using those.
16:26:46,363 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Person" has been specified with JDO annotations so using those.
16:26:46,364 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" has been specified with JDO annotations so using those.
16:26:46,365 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" has been specified with JDO annotations so using those.
16:26:46,365 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Populating all MetaData ...
16:26:46,366 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Populating Meta-Data
16:26:46,366 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" NOT found at /META-INF/package-h2.orm
16:26:46,366 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" NOT found at /WEB-INF/package-h2.orm
16:26:46,367 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/package-h2.orm" using handler "jdo" (validation="false")
16:26:46,372 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - XML Entity Public="" System="file:/javax/jdo/orm.dtd" : using local source "/org/datanucleus/api/jdo/jdo_orm_3_1.dtd"
16:26:46,383 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" will use file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/package-h2.orm
16:26:46,384 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - File "" is having internal MetaData definition updated with ORM information
16:26:46,384 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Address" is having internal MetaData definition updated with ORM information
16:26:46,386 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Populating Meta-Data
16:26:46,386 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Task" is having internal MetaData definition updated with ORM information
16:26:46,386 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Populating Meta-Data
16:26:46,386 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Department" is having internal MetaData definition updated with ORM information
16:26:46,386 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Populating Meta-Data
16:26:46,386 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Project" is having internal MetaData definition updated with ORM information
16:26:46,387 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Person" : Populating Meta-Data
16:26:46,387 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Person" is having internal MetaData definition updated with ORM information
16:26:46,387 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" : Populating Meta-Data
16:26:46,387 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" is having internal MetaData definition updated with ORM information
16:26:46,388 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Populating Meta-Data
16:26:46,388 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" is having internal MetaData definition updated with ORM information
16:26:46,388 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Initialising all MetaData ...
16:26:46,389 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Initialising Meta-Data
16:26:46,389 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Initialising Meta-Data
16:26:46,390 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Initialising Meta-Data
16:26:46,390 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Initialising Meta-Data
16:26:46,390 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Person" : Initialising Meta-Data
16:26:46,390 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Applicant" : Initialising Meta-Data
16:26:46,390 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Initialising Meta-Data
16:26:46,390 (test.Lista5.main()) DEBUG [DataNucleus.MetaData] - MetaData Management : Load of Metadata complete
16:26:46,391 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
16:26:46,422 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - Created tx data source using pooling type of dbcp-builtin
16:26:46,422 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - Registered transactional connection factory under name "rdbms/tx"
16:26:46,422 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - Registered nontransactional connection factory under name "rdbms/nontx"
16:26:46,450 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - Created nontx data source using pooling type of dbcp-builtin
16:26:46,513 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@71a40fac [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened
16:26:46,539 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:46,539 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=true)
16:26:46,540 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
16:26:46,540 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
16:26:46,541 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
16:26:46,541 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
16:26:46,541 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
16:26:46,543 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
16:26:46,543 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
16:26:46,544 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
16:26:46,544 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
16:26:46,544 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
16:26:46,545 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
16:26:46,546 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
16:26:46,546 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
16:26:46,546 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
16:26:46,546 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
16:26:46,546 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
16:26:46,546 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
16:26:46,546 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:46,546 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:46,547 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
16:26:46,547 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
16:26:46,548 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
16:26:46,549 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
16:26:46,549 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
16:26:46,549 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
16:26:46,550 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
16:26:46,550 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
16:26:46,550 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:46,551 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:46,552 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
16:26:46,552 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
16:26:46,552 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
16:26:46,552 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
16:26:46,552 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:46,552 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:46,552 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
16:26:46,552 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
16:26:46,553 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
16:26:46,553 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
16:26:46,553 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
16:26:46,554 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
16:26:46,554 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
16:26:46,554 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
16:26:46,554 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
16:26:46,554 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
16:26:46,554 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
16:26:46,559 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Removing RDBMS support for Java type java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
16:26:46,559 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Removing RDBMS support for Java type java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
16:26:46,579 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DELETEME1460989606573.UNUSED" added to internal representation of table.
16:26:46,581 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Creating table DELETEME1460989606573
16:26:46,584 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE DELETEME1460989606573
(
    UNUSED INTEGER NOT NULL
)
16:26:46,584 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Execution Time = 0 ms
16:26:46,586 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Dropping table DELETEME1460989606573
16:26:46,586 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE DELETEME1460989606573
16:26:46,586 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Execution Time = 0 ms
16:26:46,586 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Datastore : read-write
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - ===========================================================
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.H2Adapter
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Datastore : name="H2" version="1.3.168 (2012-07-13)"
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="H2 JDBC Driver" version="1.3.168 (2012-07-13)"
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:h2:tcp://localhost/~/IdeaProjects/ntbd/data/db]
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:h2:tcp://localhost/~/IdeaProjects/ntbd/data/db]
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case=UPPERCASE catalog=DB schema=PUBLIC
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : "MixedCase" UPPERCASE "MixedCase-Sensitive" 
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=128 Column=128 Constraint=128 Index=128 Delimiter="
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=true
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, BOOLEAN, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, [id=-10], CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, ARRAY, REAL, OTHER, DOUBLE, DATE, TIME, TIMESTAMP
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - ===========================================================
16:26:46,587 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@71a40fac [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@29d0b415, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
16:26:46,588 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@71a40fac [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@29d0b415, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
16:26:46,588 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - StoreManager now created
16:26:46,589 (test.Lista5.main()) DEBUG [DataNucleus.Cache] - Level 2 Cache of type "soft" initialised
16:26:46,590 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
16:26:46,595 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
16:26:46,595 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Version "4.1.10" with JRE "1.8.0_60" on "Windows 10"
16:26:46,595 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
16:26:46,595 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Persistence-Unit : Tutorial
16:26:46,595 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
16:26:46,595 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - ClassLoading : default
16:26:46,595 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Belgrade
16:26:46,595 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
16:26:46,596 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
16:26:46,596 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
16:26:46,596 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - ================================================
16:26:46,612 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@13b3d118" opened for datastore "org.datanucleus.store.rdbms.RDBMSStoreManager@49b0c535" with txn="org.datanucleus.TransactionImpl@6d60c8c2"
16:26:46,614 (test.Lista5.main()) DEBUG [DataNucleus.Cache] - Level 1 Cache of type "soft" initialised
16:26:46,619 (test.Lista5.main()) DEBUG [DataNucleus.Cache] - Query Cache of type "org.datanucleus.query.cache.SoftQueryCompilationCache" initialised
16:26:46,620 (test.Lista5.main()) DEBUG [DataNucleus.Cache] - Query Cache of type "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" initialised
16:26:46,621 (test.Lista5.main()) DEBUG [DataNucleus.Cache] - Query Cache of type "org.datanucleus.store.query.cache.SoftQueryResultsCache" initialised
16:26:46,634 (test.Lista5.main()) DEBUG [DataNucleus.Query] - JDOQL Single-String with "select address.city, salary from employee.Employee "
16:26:50,822 (test.Lista5.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Compiling "SELECT address.city, salary FROM employee.Employee"
16:26:50,856 (test.Lista5.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Compile Time = 33 ms
16:26:50,856 (test.Lista5.main()) DEBUG [DataNucleus.Query] - QueryCompilation:
  [result:PrimaryExpression{address.city},PrimaryExpression{salary}]
  [symbols: this type=employee.Employee]
16:26:50,859 (test.Lista5.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Compiling "SELECT address.city, salary FROM employee.Employee" for datastore
16:26:50,886 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Person [Table : PERSON, InheritanceStrategy : new-table]
16:26:50,887 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PERSON.PERSON_ID" added to internal representation of table.
16:26:50,889 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [PERSON.PERSON_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,891 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Address [Table : ADDRESS, InheritanceStrategy : new-table]
16:26:50,892 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.ADDRESS_ID" added to internal representation of table.
16:26:50,892 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [ADDRESS.ADDRESS_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,893 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Department [Table : DEPARTMENT, InheritanceStrategy : new-table]
16:26:50,894 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.DEPARTMENT_ID" added to internal representation of table.
16:26:50,894 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [DEPARTMENT.DEPARTMENT_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,895 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Task [Table : TASK, InheritanceStrategy : new-table]
16:26:50,895 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.TASK_ID" added to internal representation of table.
16:26:50,896 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [TASK.TASK_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,896 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Project [Table : PROJECTS, InheritanceStrategy : new-table]
16:26:50,897 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.PROJECTS_ID" added to internal representation of table.
16:26:50,898 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [PROJECTS.PROJECTS_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,898 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Employee [Table : EMPLOYEES, InheritanceStrategy : new-table]
16:26:50,899 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.EMPLOYEES_ID" added to internal representation of table.
16:26:50,900 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [EMPLOYEES.EMPLOYEES_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,901 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table ADDRESS will manage the persistence of the fields for class employee.Address (inheritance strategy="new-table") 
16:26:50,901 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.CITY" added to internal representation of table.
16:26:50,904 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.city] -> Column(s) [ADDRESS.CITY] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,906 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.DEPARTMENT_DEPARTMENT_ID_OID" added to internal representation of table.
16:26:50,906 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.department] -> Column(s) [ADDRESS.DEPARTMENT_DEPARTMENT_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,907 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.PERSON_PERSON_ID_OID" added to internal representation of table.
16:26:50,907 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.person] -> Column(s) [ADDRESS.PERSON_PERSON_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,908 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.POSTCODE" added to internal representation of table.
16:26:50,908 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.postcode] -> Column(s) [ADDRESS.POSTCODE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,908 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.STREET" added to internal representation of table.
16:26:50,909 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.street] -> Column(s) [ADDRESS.STREET] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,909 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View ADDRESS has been initialised
16:26:50,909 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table TASK will manage the persistence of the fields for class employee.Task (inheritance strategy="new-table") 
16:26:50,909 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.DESCRIPTION" added to internal representation of table.
16:26:50,910 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.description] -> Column(s) [TASK.DESCRIPTION] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,910 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.ENDDATE" added to internal representation of table.
16:26:50,911 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.endDate] -> Column(s) [TASK.ENDDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
16:26:50,912 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.PROJECT_PROJECTS_ID_OID" added to internal representation of table.
16:26:50,912 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.project] -> Column(s) [TASK.PROJECT_PROJECTS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,912 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.STARTDATE" added to internal representation of table.
16:26:50,913 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.startDate] -> Column(s) [TASK.STARTDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
16:26:50,913 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View TASK has been initialised
16:26:50,913 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table DEPARTMENT will manage the persistence of the fields for class employee.Department (inheritance strategy="new-table") 
16:26:50,914 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.ADDRESS_ADDRESS_ID_OID" added to internal representation of table.
16:26:50,914 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.address] -> Column(s) [DEPARTMENT.ADDRESS_ADDRESS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,915 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.HEAD_EMPLOYEES_ID_OID" added to internal representation of table.
16:26:50,915 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.head] -> Column(s) [DEPARTMENT.HEAD_EMPLOYEES_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,916 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT."NAME"" added to internal representation of table.
16:26:50,916 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.name] -> Column(s) [DEPARTMENT."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,916 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View DEPARTMENT has been initialised
16:26:50,917 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table PROJECTS will manage the persistence of the fields for class employee.Project (inheritance strategy="new-table") 
16:26:50,925 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Field : employee.Project.employee [Table : PROJECT_EMPLOYEE]
16:26:50,926 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.employee] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
16:26:50,926 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS."NAME"" added to internal representation of table.
16:26:50,927 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.name] -> Column(s) [PROJECTS."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,927 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.SUBJECT" added to internal representation of table.
16:26:50,927 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.subject] -> Column(s) [PROJECTS.SUBJECT] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,928 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.task] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
16:26:50,929 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.TASK_PROJECTS_ID_OID" added to internal representation of table.
16:26:50,929 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View PROJECTS has been initialised
16:26:50,930 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table PERSON will manage the persistence of the fields for class employee.Person (inheritance strategy="new-table") 
16:26:50,930 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PERSON.ADDRESS" added to internal representation of table.
16:26:50,930 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Person.address] -> Column(s) [PERSON.ADDRESS] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,931 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PERSON."NAME"" added to internal representation of table.
16:26:50,931 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Person.name] -> Column(s) [PERSON."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,931 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View PERSON has been initialised
16:26:50,932 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table EMPLOYEES will manage the persistence of the fields for class employee.Employee (inheritance strategy="new-table") 
16:26:50,932 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.DEPARTMENT" added to internal representation of table.
16:26:50,932 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.department] -> Column(s) [EMPLOYEES.DEPARTMENT] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,932 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.HIREDATE" added to internal representation of table.
16:26:50,933 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.hiredate] -> Column(s) [EMPLOYEES.HIREDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
16:26:50,933 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.JOB" added to internal representation of table.
16:26:50,934 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.job] -> Column(s) [EMPLOYEES.JOB] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
16:26:50,934 (test.Lista5.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Field : employee.Employee.project [Table : EMPLOYEE_PROJECT]
16:26:50,934 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.project] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
16:26:50,935 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.SALARY" added to internal representation of table.
16:26:50,935 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.salary] -> Column(s) [EMPLOYEES.SALARY] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DoubleMapping" (org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping)
16:26:50,935 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View EMPLOYEES has been initialised
16:26:50,939 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECT_EMPLOYEE.PROJECTS_ID_OID" added to internal representation of table.
16:26:50,940 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.employee.[OWNER]] -> Column(s) [PROJECT_EMPLOYEE.PROJECTS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,941 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECT_EMPLOYEE.EMPLOYEES_ID_EID" added to internal representation of table.
16:26:50,943 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.employee.[ELEMENT]] -> Column(s) [PROJECT_EMPLOYEE.EMPLOYEES_ID_EID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,943 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View PROJECT_EMPLOYEE has been initialised
16:26:50,944 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEE_PROJECT.EMPLOYEES_ID_OID" added to internal representation of table.
16:26:50,944 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.project.[OWNER]] -> Column(s) [EMPLOYEE_PROJECT.EMPLOYEES_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,945 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEE_PROJECT.PROJECTS_ID_EID" added to internal representation of table.
16:26:50,945 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.project.[ELEMENT]] -> Column(s) [EMPLOYEE_PROJECT.PROJECTS_ID_EID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
16:26:50,946 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View EMPLOYEE_PROJECT has been initialised
16:26:50,949 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@52b86bdc [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened with isolation level "serializable" and auto-commit=false
16:26:50,949 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction started with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aa5924c" with isolation "serializable"
16:26:50,952 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of ADDRESS returned table type of TABLE
16:26:50,954 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Loading column info for table(s) "TASK, PERSON, EMPLOYEES, PROJECTS, PROJECT_EMPLOYEE, ADDRESS, EMPLOYEE_PROJECT, DEPARTMENT" in Catalog "", Schema ""
16:26:51,039 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column info loaded for Catalog "", Schema "", 8 tables, time = 85 ms
16:26:51,040 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Column info retrieved for table "ADDRESS" : 6 columns found
16:26:51,043 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of TASK returned table type of TABLE
16:26:51,046 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of DEPARTMENT returned table type of TABLE
16:26:51,049 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of PROJECTS returned table type of TABLE
16:26:51,053 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of PERSON returned table type of TABLE
16:26:51,055 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of EMPLOYEES returned table type of TABLE
16:26:51,058 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of PROJECT_EMPLOYEE returned table type of TABLE
16:26:51,061 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of EMPLOYEE_PROJECT returned table type of TABLE
16:26:51,069 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table ADDRESS
16:26:51,079 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table ADDRESS
16:26:51,084 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table ADDRESS
16:26:51,088 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table TASK
16:26:51,092 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table TASK
16:26:51,096 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table TASK
16:26:51,100 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table DEPARTMENT
16:26:51,105 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table DEPARTMENT
16:26:51,108 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table DEPARTMENT
16:26:51,112 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 index(es) for table PROJECTS
16:26:51,115 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 0 foreign key(s) for table PROJECTS
16:26:51,117 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table PROJECTS
16:26:51,121 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 index(es) for table PERSON
16:26:51,126 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 foreign key(s) for table PERSON
16:26:51,130 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table PERSON
16:26:51,133 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 index(es) for table EMPLOYEES
16:26:51,138 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table EMPLOYEES
16:26:51,141 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table EMPLOYEES
16:26:51,146 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table PROJECT_EMPLOYEE
16:26:51,151 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table PROJECT_EMPLOYEE
16:26:51,157 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table PROJECT_EMPLOYEE
16:26:51,160 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table EMPLOYEE_PROJECT
16:26:51,165 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table EMPLOYEE_PROJECT
16:26:51,169 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table EMPLOYEE_PROJECT
16:26:51,169 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction committing with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aa5924c"
16:26:51,170 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction closing with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aa5924c"
16:26:51,170 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@52b86bdc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aa5924c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
16:26:51,170 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@52b86bdc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aa5924c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
16:26:51,228 (test.Lista5.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Compile Time for datastore = 368 ms
16:26:51,228 (test.Lista5.main()) DEBUG [DataNucleus.Query] - SELECT address.city, salary FROM employee.Employee Query compiled to datastore query "SELECT B0.CITY,A0.SALARY FROM EMPLOYEES A0 INNER JOIN PERSON A1 ON A0.EMPLOYEES_ID = A1.PERSON_ID LEFT OUTER JOIN ADDRESS B0 ON A1.ADDRESS = B0.ADDRESS_ID"
16:26:51,232 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection added to the pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2dad8409 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" for key="org.datanucleus.ExecutionContextImpl@13b3d118" in factory="ConnectionFactory:nontx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@3e5c1105]"
16:26:51,232 (test.Lista5.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Executing "SELECT address.city, salary FROM employee.Employee" ...
16:26:51,234 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2dad8409 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened with isolation level "read-committed" and auto-commit=false
16:26:51,236 (test.Lista5.main()) DEBUG [DataNucleus.Datastore] - Closing PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@2bdcdca5"
16:26:51,239 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Native] - SELECT B0.CITY,A0.SALARY FROM EMPLOYEES A0 INNER JOIN PERSON A1 ON A0.EMPLOYEES_ID = A1.PERSON_ID LEFT OUTER JOIN ADDRESS B0 ON A1.ADDRESS = B0.ADDRESS_ID
16:26:51,244 (test.Lista5.main()) DEBUG [DataNucleus.Datastore.Retrieve] - Execution Time = 5 ms
16:26:51,258 (test.Lista5.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Execution Time = 26 ms
16:26:51,258 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2dad8409 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@32c7893f, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
16:26:51,259 (test.Lista5.main()) DEBUG [DataNucleus.Query] - Reading in results for query "SELECT address.city, salary FROM employee.Employee" since the connection used is closing/committing
16:26:51,266 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2dad8409 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@32c7893f, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
16:26:51,267 (test.Lista5.main()) DEBUG [DataNucleus.Connection] - ManagedConnection removed from the pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2dad8409 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@32c7893f, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" for key="org.datanucleus.ExecutionContextImpl@13b3d118" in factory="ConnectionFactory:nontx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@3e5c1105]"
