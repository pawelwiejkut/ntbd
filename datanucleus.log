17:38:28,001 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
17:38:28,045 (main) DEBUG [DataNucleus.General] - Registering bundle org.sonatype.inject version 2.3.0 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar.
17:38:28,074 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
17:38:28,076 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
17:38:28,079 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.1.9 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar.
17:38:28,097 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar!/plugin.xml.
17:38:28,119 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar!/plugin.xml.
17:38:28,126 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.1.1 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar.
17:38:28,132 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
17:38:28,134 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
17:38:28,137 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.1.11 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar.
17:38:28,159 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar!/plugin.xml.
17:38:28,169 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar!/plugin.xml.
17:38:28,204 (main) DEBUG [DataNucleus.Persistence] - Java types support initialising ...
17:38:28,254 (main) DEBUG [DataNucleus.Persistence] - Java types support loaded : supported java types=[B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
17:38:28,254 (main) DEBUG [DataNucleus.Persistence] - Type converter support initialising ...
17:38:28,281 (main) DEBUG [DataNucleus.Persistence] - Type converter support loaded
17:38:28,281 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : java.lang.String,byte[],java.nio.ByteBuffer
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
17:38:28,282 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.String,java.lang.Double,java.nio.ByteBuffer
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.String,java.lang.Long,java.nio.ByteBuffer
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,[Ljava.lang.Object;,java.sql.Timestamp,java.util.Date
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
17:38:28,283 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
17:38:28,284 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
17:38:28,285 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
17:38:28,285 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (version 4.1.9) for API "JDO"
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-maven-plugin\4.0.0-release\datanucleus-maven-plugin-4.0.0-release.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.8\plexus-utils-3.0.8.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-inject-bean\2.3.0\sisu-inject-bean-2.3.0.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-guice\3.1.0\sisu-guice-3.1.0-no_aop.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-guava\0.9.9\sisu-guava-0.9.9.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\apache\xbean\xbean-reflect\3.4\xbean-reflect-3.4.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\log4j\log4j\1.2.12\log4j-1.2.12.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\commons-logging\commons-logging-api\1.1\commons-logging-api-1.1.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\collections\google-collections\1.0\google-collections-1.0.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\junit\junit\3.8.2\junit-3.8.2.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-core\4.1.9\datanucleus-core-4.1.9.jar
17:38:28,286 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-api-jdo\4.1.1\datanucleus-api-jdo-4.1.1.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\jdo\jdo-api\3.1\jdo-api-3.1.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\transaction\transaction-api\1.1\transaction-api-1.1.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\jfairy\jfairy\0.3.0\jfairy-0.3.0.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\guava\guava\19.0\guava-19.0.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\iban4j\iban4j\2.1.1\iban4j-2.1.1.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\inject\extensions\guice-assistedinject\3.0\guice-assistedinject-3.0.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\joda-time\joda-time\2.3\joda-time-2.3.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-rdbms\4.1.11\datanucleus-rdbms-4.1.11.jar
17:38:28,287 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\pawelwiejkut\.m2\repository\com\h2database\h2\1.3.168\h2-1.3.168.jar
17:38:28,288 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
17:38:28,292 (main) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/META-INF/persistence.xml" using handler "persistence" (validation="false")
17:38:28,301 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Loading Metadata for persistence-unit "Tutorial" ...
17:38:28,383 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" has been specified with JDO annotations so using those.
17:38:28,387 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" has been specified with JDO annotations so using those.
17:38:28,389 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" has been specified with JDO annotations so using those.
17:38:28,392 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" has been specified with JDO annotations so using those.
17:38:28,392 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" has been specified with JDO annotations so using those.
17:38:28,392 (main) DEBUG [DataNucleus.MetaData] - Populating all MetaData ...
17:38:28,393 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Populating Meta-Data
17:38:28,396 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "city" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,396 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "street" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,396 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "postcode" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,397 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" field "department" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,398 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Populating Meta-Data
17:38:28,399 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" field "description" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,399 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" field "startDate" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,399 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" field "endDate" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,399 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" field "project" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,399 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Populating Meta-Data
17:38:28,399 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" field "name" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,399 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" field "head" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,399 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" field "address" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,400 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Populating Meta-Data
17:38:28,400 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "name" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,400 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "subject" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,400 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "task" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,400 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "employee" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,401 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "employee" : Has a Collection yet no element type is provided in MetaData nor is inferrable using generics, so using Object
17:38:28,401 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" field "task" : Has a Collection yet no element type is provided in MetaData nor is inferrable using generics, so using Object
17:38:28,401 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Populating Meta-Data
17:38:28,402 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "name" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,402 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "hiredate" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,402 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "job" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,402 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "salary" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,402 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "department" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,402 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "project" : Adding Meta-Data for field since it didnt appear in the Meta-Data definition.
17:38:28,402 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" field "project" : Has a Collection yet no element type is provided in MetaData nor is inferrable using generics, so using Object
17:38:28,402 (main) DEBUG [DataNucleus.MetaData] - Initialising all MetaData ...
17:38:28,403 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Initialising Meta-Data
17:38:28,404 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Initialising Meta-Data
17:38:28,404 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Initialising Meta-Data
17:38:28,404 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Initialising Meta-Data
17:38:28,404 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Initialising Meta-Data
17:38:28,404 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Load of Metadata complete
17:38:28,411 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Address" starting ...
17:38:28,431 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
17:38:28,432 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnStateManager" but is required
17:38:28,432 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnInheritedFieldCount" but is required
17:38:28,432 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnFlags" but is required
17:38:28,432 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnFieldTypes" but is required
17:38:28,432 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnFieldNames" but is required
17:38:28,432 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnFieldFlags" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have field "dnPersistableSuperclass" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnReplaceField" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsTransactional" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnNewInstance" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnNewInstance" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnSuperClone" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnProvideFields" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "___dn$loadClass" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetManagedFieldCount" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsDirty" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnReplaceStateManager" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnReplaceFlags" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsDetached" but is required
17:38:28,433 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnMakeDirty" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnPersistableSuperclassInit" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsDeleted" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnFieldFlagsInit" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnFieldTypesInit" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnProvideField" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnPreSerialize" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetObjectId" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetVersion" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetTransactionalObjectId" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsNew" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyField" but is required
17:38:28,434 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnGetExecutionContext" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnCopyFields" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnGetInheritedFieldCount" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnIsPersistent" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "dnReplaceFields" but is required
17:38:28,435 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Address" doesnt have method "__dnFieldNamesInit" but is required
17:38:28,445 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getDepartment changing field "employee.Address.department" for call to "dnGetdepartment()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setDepartment changing field "employee.Address.department" for call to "dnSetdepartment()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getCity changing field "employee.Address.city" for call to "dnGetcity()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setCity changing field "employee.Address.city" for call to "dnSetcity()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getStreet changing field "employee.Address.street" for call to "dnGetstreet()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setStreet changing field "employee.Address.street" for call to "dnSetstreet()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.getPostcode changing field "employee.Address.postcode" for call to "dnGetpostcode()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.setPostcode changing field "employee.Address.postcode" for call to "dnSetpostcode()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.city" for call to "dnGetcity()"
17:38:28,449 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.street" for call to "dnGetstreet()"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.postcode" for call to "dnGetpostcode()"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Address.toString changing field "employee.Address.department" for call to "dnGetdepartment()"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
17:38:28,450 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
17:38:28,451 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
17:38:28,452 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
17:38:28,452 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
17:38:28,452 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
17:38:28,452 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
17:38:28,452 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
17:38:28,453 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
17:38:28,453 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
17:38:28,453 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
17:38:28,453 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
17:38:28,454 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
17:38:28,454 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
17:38:28,454 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
17:38:28,454 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
17:38:28,454 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
17:38:28,454 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
17:38:28,454 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
17:38:28,454 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
17:38:28,455 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
17:38:28,455 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
17:38:28,455 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
17:38:28,455 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
17:38:28,455 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
17:38:28,456 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
17:38:28,456 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
17:38:28,456 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
17:38:28,456 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
17:38:28,456 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Address obj, int index)"
17:38:28,457 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
17:38:28,457 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
17:38:28,457 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
17:38:28,457 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
17:38:28,457 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
17:38:28,457 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
17:38:28,457 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
17:38:28,458 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
17:38:28,458 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
17:38:28,459 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetcity(employee.Address objPC)"
17:38:28,459 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetcity(employee.Address objPC, java.lang.String val)"
17:38:28,459 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Department dnGetdepartment(employee.Address objPC)"
17:38:28,460 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetdepartment(employee.Address objPC, employee.Department val)"
17:38:28,460 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetpostcode(employee.Address objPC)"
17:38:28,460 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetpostcode(employee.Address objPC, java.lang.String val)"
17:38:28,460 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetstreet(employee.Address objPC)"
17:38:28,460 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetstreet(employee.Address objPC, java.lang.String val)"
17:38:28,461 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Address.class" with enhanced definition
17:38:28,461 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Address" completed
17:38:28,461 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Task" starting ...
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnStateManager" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnInheritedFieldCount" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnFlags" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnFieldTypes" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnFieldNames" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnFieldFlags" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have field "dnPersistableSuperclass" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnReplaceField" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsTransactional" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnNewInstance" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnNewInstance" but is required
17:38:28,462 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnSuperClone" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnProvideFields" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "___dn$loadClass" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetManagedFieldCount" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsDirty" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnReplaceStateManager" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnReplaceFlags" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsDetached" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnMakeDirty" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnPersistableSuperclassInit" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsDeleted" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnFieldFlagsInit" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnFieldTypesInit" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnProvideField" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnPreSerialize" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetObjectId" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetVersion" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetTransactionalObjectId" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsNew" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyField" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnGetExecutionContext" but is required
17:38:28,463 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnCopyFields" but is required
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnGetInheritedFieldCount" but is required
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnIsPersistent" but is required
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "dnReplaceFields" but is required
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Task" doesnt have method "__dnFieldNamesInit" but is required
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.getProject changing field "employee.Task.project" for call to "dnGetproject()"
17:38:28,464 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.setProject changing field "employee.Task.project" for call to "dnSetproject()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.getDescription changing field "employee.Task.description" for call to "dnGetdescription()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.setDescription changing field "employee.Task.description" for call to "dnSetdescription()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.getStartDate changing field "employee.Task.startDate" for call to "dnGetstartDate()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.setStartDate changing field "employee.Task.startDate" for call to "dnSetstartDate()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.getEndDate changing field "employee.Task.endDate" for call to "dnGetendDate()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.setEndDate changing field "employee.Task.endDate" for call to "dnSetendDate()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.toString changing field "employee.Task.description" for call to "dnGetdescription()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.toString changing field "employee.Task.startDate" for call to "dnGetstartDate()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.toString changing field "employee.Task.endDate" for call to "dnGetendDate()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Task.toString changing field "employee.Task.project" for call to "dnGetproject()"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
17:38:28,465 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
17:38:28,466 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
17:38:28,467 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Task obj, int index)"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
17:38:28,468 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetdescription(employee.Task objPC)"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetdescription(employee.Task objPC, java.lang.String val)"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Date dnGetendDate(employee.Task objPC)"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetendDate(employee.Task objPC, java.util.Date val)"
17:38:28,469 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Project dnGetproject(employee.Task objPC)"
17:38:28,470 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetproject(employee.Task objPC, employee.Project val)"
17:38:28,470 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Date dnGetstartDate(employee.Task objPC)"
17:38:28,470 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetstartDate(employee.Task objPC, java.util.Date val)"
17:38:28,470 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Task.class" with enhanced definition
17:38:28,471 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Task" completed
17:38:28,471 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Department" starting ...
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnStateManager" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnInheritedFieldCount" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnFlags" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnFieldTypes" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnFieldNames" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnFieldFlags" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have field "dnPersistableSuperclass" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnReplaceField" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsTransactional" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnNewInstance" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnNewInstance" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnSuperClone" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnProvideFields" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "___dn$loadClass" but is required
17:38:28,472 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetManagedFieldCount" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsDirty" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnReplaceStateManager" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnReplaceFlags" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsDetached" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnMakeDirty" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnPersistableSuperclassInit" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsDeleted" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnFieldFlagsInit" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnFieldTypesInit" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnProvideField" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnPreSerialize" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetObjectId" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetVersion" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetTransactionalObjectId" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsNew" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyField" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,473 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnGetExecutionContext" but is required
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnCopyFields" but is required
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnGetInheritedFieldCount" but is required
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnIsPersistent" but is required
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "dnReplaceFields" but is required
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Department" doesnt have method "__dnFieldNamesInit" but is required
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
17:38:28,474 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.getName changing field "employee.Department.name" for call to "dnGetname()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.getHead changing field "employee.Department.head" for call to "dnGethead()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.setName changing field "employee.Department.name" for call to "dnSetname()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.setHead changing field "employee.Department.head" for call to "dnSethead()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.getAddress changing field "employee.Department.address" for call to "dnGetaddress()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.setAddress changing field "employee.Department.address" for call to "dnSetaddress()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.toString changing field "employee.Department.name" for call to "dnGetname()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.toString changing field "employee.Department.head" for call to "dnGethead()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Department.toString changing field "employee.Department.address" for call to "dnGetaddress()"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
17:38:28,475 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
17:38:28,476 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
17:38:28,477 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Department obj, int index)"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Address dnGetaddress(employee.Department objPC)"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetaddress(employee.Department objPC, employee.Address val)"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Employee dnGethead(employee.Department objPC)"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSethead(employee.Department objPC, employee.Employee val)"
17:38:28,478 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetname(employee.Department objPC)"
17:38:28,479 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetname(employee.Department objPC, java.lang.String val)"
17:38:28,479 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Department.class" with enhanced definition
17:38:28,480 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Department" completed
17:38:28,480 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Project" starting ...
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnStateManager" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnInheritedFieldCount" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnFlags" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnFieldTypes" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnFieldNames" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnFieldFlags" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have field "dnPersistableSuperclass" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnReplaceField" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsTransactional" but is required
17:38:28,481 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnNewInstance" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnNewInstance" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnSuperClone" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnProvideFields" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "___dn$loadClass" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetManagedFieldCount" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsDirty" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnReplaceStateManager" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnReplaceFlags" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsDetached" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnMakeDirty" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnPersistableSuperclassInit" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsDeleted" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnFieldFlagsInit" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnFieldTypesInit" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnProvideField" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnPreSerialize" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetObjectId" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetVersion" but is required
17:38:28,482 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetTransactionalObjectId" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsNew" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyField" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnGetExecutionContext" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnCopyFields" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnGetInheritedFieldCount" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnIsPersistent" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "dnReplaceFields" but is required
17:38:28,483 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Project" doesnt have method "__dnFieldNamesInit" but is required
17:38:28,484 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
17:38:28,484 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getName changing field "employee.Project.name" for call to "dnGetname()"
17:38:28,484 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.setName changing field "employee.Project.name" for call to "dnSetname()"
17:38:28,484 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getSubject changing field "employee.Project.subject" for call to "dnGetsubject()"
17:38:28,484 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.setSubject changing field "employee.Project.subject" for call to "dnSetsubject()"
17:38:28,484 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getTask changing field "employee.Project.task" for call to "dnGettask()"
17:38:28,484 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getTask changing field "employee.Project.task" for call to "dnSettask()"
17:38:28,485 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getTask changing field "employee.Project.task" for call to "dnGettask()"
17:38:28,485 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getEmployee changing field "employee.Project.employee" for call to "dnGetemployee()"
17:38:28,485 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getEmployee changing field "employee.Project.employee" for call to "dnSetemployee()"
17:38:28,485 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.getEmployee changing field "employee.Project.employee" for call to "dnGetemployee()"
17:38:28,485 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.toString changing field "employee.Project.name" for call to "dnGetname()"
17:38:28,485 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.toString changing field "employee.Project.subject" for call to "dnGetsubject()"
17:38:28,485 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.toString changing field "employee.Project.task" for call to "dnGettask()"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Project.toString changing field "employee.Project.employee" for call to "dnGetemployee()"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
17:38:28,486 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
17:38:28,487 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Project obj, int index)"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
17:38:28,488 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
17:38:28,489 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Set dnGetemployee(employee.Project objPC)"
17:38:28,489 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetemployee(employee.Project objPC, java.util.Set val)"
17:38:28,489 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetname(employee.Project objPC)"
17:38:28,489 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetname(employee.Project objPC, java.lang.String val)"
17:38:28,489 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetsubject(employee.Project objPC)"
17:38:28,489 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetsubject(employee.Project objPC, java.lang.String val)"
17:38:28,489 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Set dnGettask(employee.Project objPC)"
17:38:28,489 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSettask(employee.Project objPC, java.util.Set val)"
17:38:28,490 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Project.class" with enhanced definition
17:38:28,491 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Project" completed
17:38:28,491 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Employee" starting ...
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt implement the interface "org.datanucleus.enhancement.Persistable" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnStateManager" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnInheritedFieldCount" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnFlags" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnFieldTypes" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnFieldNames" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnFieldFlags" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have field "dnPersistableSuperclass" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnReplaceField" but is required
17:38:28,492 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnIsTransactional" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnNewInstance" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnNewInstance" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnSuperClone" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnProvideFields" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "___dn$loadClass" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnGetManagedFieldCount" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnIsDirty" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnReplaceStateManager" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnReplaceFlags" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnIsDetached" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnMakeDirty" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnPersistableSuperclassInit" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnIsDeleted" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnFieldFlagsInit" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnFieldTypesInit" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnProvideField" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnPreSerialize" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnGetObjectId" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnGetVersion" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnGetTransactionalObjectId" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnIsNew" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,493 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnCopyKeyFieldsToObjectId" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnCopyField" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnCopyKeyFieldsFromObjectId" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnGetExecutionContext" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnCopyFields" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnGetInheritedFieldCount" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnNewObjectIdInstance" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnIsPersistent" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "dnReplaceFields" but is required
17:38:28,494 (main) DEBUG [DataNucleus.Enhancer] - Class "employee.Employee" doesnt have method "__dnFieldNamesInit" but is required
17:38:28,495 (main) DEBUG [DataNucleus.Enhancer] - Adding interface: org.datanucleus.enhancement.Persistable
17:38:28,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getDepartment changing field "employee.Employee.department" for call to "dnGetdepartment()"
17:38:28,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getHiredate changing field "employee.Employee.hiredate" for call to "dnGethiredate()"
17:38:28,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getJob changing field "employee.Employee.job" for call to "dnGetjob()"
17:38:28,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getName changing field "employee.Employee.name" for call to "dnGetname()"
17:38:28,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getSalary changing field "employee.Employee.salary" for call to "dnGetsalary()"
17:38:28,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setDepartment changing field "employee.Employee.department" for call to "dnSetdepartment()"
17:38:28,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setHiredate changing field "employee.Employee.hiredate" for call to "dnSethiredate()"
17:38:28,496 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setJob changing field "employee.Employee.job" for call to "dnSetjob()"
17:38:28,496 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setName changing field "employee.Employee.name" for call to "dnSetname()"
17:38:28,496 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.setSalary changing field "employee.Employee.salary" for call to "dnSetsalary()"
17:38:28,496 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getProject changing field "employee.Employee.project" for call to "dnGetproject()"
17:38:28,496 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getProject changing field "employee.Employee.project" for call to "dnSetproject()"
17:38:28,496 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.getProject changing field "employee.Employee.project" for call to "dnGetproject()"
17:38:28,496 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.name" for call to "dnGetname()"
17:38:28,496 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.hiredate" for call to "dnGethiredate()"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.job" for call to "dnGetjob()"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.salary" for call to "dnGetsalary()"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.department" for call to "dnGetdepartment()"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Enhancing original method employee.Employee.toString changing field "employee.Employee.project" for call to "dnGetproject()"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding field "org.datanucleus.enhancement.StateManager dnStateManager"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding field "byte dnFlags"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[B dnFieldFlags"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding field "java.lang.Class dnPersistableSuperclass"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.Class; dnFieldTypes"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding field "[Ljava.lang.String; dnFieldNames"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding field "int dnInheritedFieldCount"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void <clinit>()"
17:38:28,497 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetObjectId()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetVersion()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnPreSerialize()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnGetTransactionalObjectId()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDeleted()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDirty()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsNew()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsPersistent()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsTransactional()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnMakeDirty(java.lang.String fieldName)"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance()"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
17:38:28,498 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideFields([I indices)"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFields([I indices)"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceFlags()"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "boolean dnIsDetached()"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnReplaceField(int index)"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnProvideField(int index)"
17:38:28,499 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyField(employee.Employee obj, int index)"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnCopyFields(java.lang.Object obj, [I indices)"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.String; __dnFieldNamesInit()"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[Ljava.lang.Class; __dnFieldTypesInit()"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "[B __dnFieldFlagsInit()"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int __dnGetInheritedFieldCount()"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "int dnGetManagedFieldCount()"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class __dnPersistableSuperclassInit()"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Class ___dn$loadClass(java.lang.String className)"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.Object dnSuperClone()"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "employee.Department dnGetdepartment(employee.Employee objPC)"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetdepartment(employee.Employee objPC, employee.Department val)"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Date dnGethiredate(employee.Employee objPC)"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSethiredate(employee.Employee objPC, java.util.Date val)"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetjob(employee.Employee objPC)"
17:38:28,500 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetjob(employee.Employee objPC, java.lang.String val)"
17:38:28,501 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.lang.String dnGetname(employee.Employee objPC)"
17:38:28,501 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetname(employee.Employee objPC, java.lang.String val)"
17:38:28,501 (main) DEBUG [DataNucleus.Enhancer] - Adding method "java.util.Set dnGetproject(employee.Employee objPC)"
17:38:28,501 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetproject(employee.Employee objPC, java.util.Set val)"
17:38:28,501 (main) DEBUG [DataNucleus.Enhancer] - Adding method "double dnGetsalary(employee.Employee objPC)"
17:38:28,501 (main) DEBUG [DataNucleus.Enhancer] - Adding method "void dnSetsalary(employee.Employee objPC, double val)"
17:38:28,501 (main) INFO  [DataNucleus.Enhancer] - Writing class file "C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes\employee\Employee.class" with enhanced definition
17:38:28,502 (main) DEBUG [DataNucleus.Enhancer] - Enhance of class "employee.Employee" completed
17:38:28,502 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer completed with success for 5 classes.
17:38:28,871 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creation of the schema for classes
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-maven-plugin\4.0.0-release\datanucleus-maven-plugin-4.0.0-release.jar
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.8\plexus-utils-3.0.8.jar
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-inject-bean\2.3.0\sisu-inject-bean-2.3.0.jar
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-guice\3.1.0\sisu-guice-3.1.0-no_aop.jar
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\sonatype\sisu\sisu-guava\0.9.9\sisu-guava-0.9.9.jar
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\apache\xbean\xbean-reflect\3.4\xbean-reflect-3.4.jar
17:38:28,872 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\log4j\log4j\1.2.12\log4j-1.2.12.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\commons-logging\commons-logging-api\1.1\commons-logging-api-1.1.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\collections\google-collections\1.0\google-collections-1.0.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\junit\junit\3.8.2\junit-3.8.2.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\IdeaProjects\ntbd\target\classes
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-core\4.1.9\datanucleus-core-4.1.9.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-api-jdo\4.1.1\datanucleus-api-jdo-4.1.1.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\jdo\jdo-api\3.1\jdo-api-3.1.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\transaction\transaction-api\1.1\transaction-api-1.1.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\jfairy\jfairy\0.3.0\jfairy-0.3.0.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\guava\guava\19.0\guava-19.0.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar
17:38:28,873 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\iban4j\iban4j\2.1.1\iban4j-2.1.1.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\google\inject\extensions\guice-assistedinject\3.0\guice-assistedinject-3.0.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\joda-time\joda-time\2.3\joda-time-2.3.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\org\datanucleus\datanucleus-rdbms\4.1.11\datanucleus-rdbms-4.1.11.jar
17:38:28,874 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\pawelwiejkut\.m2\repository\com\h2database\h2\1.3.168\h2-1.3.168.jar
17:38:28,893 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
17:38:28,923 (main) DEBUG [DataNucleus.General] - Registering bundle org.sonatype.inject version 2.3.0 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar.
17:38:28,931 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
17:38:28,933 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
17:38:28,936 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.1.9 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar.
17:38:28,960 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar!/plugin.xml.
17:38:28,988 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar!/plugin.xml.
17:38:28,995 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.1.1 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar.
17:38:29,001 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
17:38:29,003 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
17:38:29,006 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.1.11 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar.
17:38:29,029 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar!/plugin.xml.
17:38:29,041 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar!/plugin.xml.
17:38:29,084 (main) DEBUG [DataNucleus.Persistence] - Java types support initialising ...
17:38:29,134 (main) DEBUG [DataNucleus.Persistence] - Java types support loaded : supported java types=[B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
17:38:29,134 (main) DEBUG [DataNucleus.Persistence] - Type converter support initialising ...
17:38:29,161 (main) DEBUG [DataNucleus.Persistence] - Type converter support loaded
17:38:29,161 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
17:38:29,161 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
17:38:29,161 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
17:38:29,161 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
17:38:29,161 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
17:38:29,161 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
17:38:29,161 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : java.lang.String,byte[],java.nio.ByteBuffer
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.String,java.lang.Double,java.nio.ByteBuffer
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.String,java.lang.Long,java.nio.ByteBuffer
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
17:38:29,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
17:38:29,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
17:38:29,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,java.util.Date,[Ljava.lang.Object;
17:38:29,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
17:38:29,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
17:38:29,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
17:38:29,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
17:38:29,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
17:38:29,163 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=true
17:38:29,163 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
17:38:29,170 (main) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/META-INF/persistence.xml" using handler "persistence" (validation="false")
17:38:29,184 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Loading Metadata for persistence-unit "Tutorial" ...
17:38:29,255 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" has been specified with JDO annotations so using those.
17:38:29,262 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" has been specified with JDO annotations so using those.
17:38:29,266 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" has been specified with JDO annotations so using those.
17:38:29,269 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" has been specified with JDO annotations so using those.
17:38:29,270 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" has been specified with JDO annotations so using those.
17:38:29,270 (main) DEBUG [DataNucleus.MetaData] - Populating all MetaData ...
17:38:29,271 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Populating Meta-Data
17:38:29,272 (main) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" NOT found at /META-INF/package-h2.orm
17:38:29,272 (main) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" NOT found at /WEB-INF/package-h2.orm
17:38:29,273 (main) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/package-h2.orm" using handler "jdo" (validation="false")
17:38:29,285 (main) DEBUG [DataNucleus.MetaData] - XML Entity Public="" System="file:/javax/jdo/orm.dtd" : using local source "/org/datanucleus/api/jdo/jdo_orm_3_1.dtd"
17:38:29,303 (main) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" will use file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/package-h2.orm
17:38:29,304 (main) DEBUG [DataNucleus.MetaData] - File "" is having internal MetaData definition updated with ORM information
17:38:29,304 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" is having internal MetaData definition updated with ORM information
17:38:29,306 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Populating Meta-Data
17:38:29,306 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" is having internal MetaData definition updated with ORM information
17:38:29,306 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Populating Meta-Data
17:38:29,307 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" is having internal MetaData definition updated with ORM information
17:38:29,307 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Populating Meta-Data
17:38:29,307 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" is having internal MetaData definition updated with ORM information
17:38:29,307 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Populating Meta-Data
17:38:29,308 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" is having internal MetaData definition updated with ORM information
17:38:29,308 (main) DEBUG [DataNucleus.MetaData] - Initialising all MetaData ...
17:38:29,309 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Initialising Meta-Data
17:38:29,309 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Initialising Meta-Data
17:38:29,310 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Initialising Meta-Data
17:38:29,310 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Initialising Meta-Data
17:38:29,310 (main) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Initialising Meta-Data
17:38:29,310 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Load of Metadata complete
17:38:29,310 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
17:38:29,358 (main) DEBUG [DataNucleus.Connection] - Created tx data source using pooling type of dbcp-builtin
17:38:29,358 (main) DEBUG [DataNucleus.Connection] - Registered transactional connection factory under name "rdbms/tx"
17:38:29,358 (main) DEBUG [DataNucleus.Connection] - Registered nontransactional connection factory under name "rdbms/nontx"
17:38:29,387 (main) DEBUG [DataNucleus.Connection] - Created nontx data source using pooling type of dbcp-builtin
17:38:29,464 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@27d415d9 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened
17:38:29,498 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:29,498 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=true)
17:38:29,499 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
17:38:29,500 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
17:38:29,500 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
17:38:29,500 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
17:38:29,500 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
17:38:29,501 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
17:38:29,501 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
17:38:29,502 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
17:38:29,503 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
17:38:29,503 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
17:38:29,503 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
17:38:29,503 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
17:38:29,503 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
17:38:29,504 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:29,504 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
17:38:29,504 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
17:38:29,504 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
17:38:29,504 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
17:38:29,504 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
17:38:29,504 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
17:38:29,505 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
17:38:29,505 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
17:38:29,505 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
17:38:29,505 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
17:38:29,505 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
17:38:29,505 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
17:38:29,505 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:29,505 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:29,506 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
17:38:29,507 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
17:38:29,508 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
17:38:29,510 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
17:38:29,510 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
17:38:29,510 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
17:38:29,510 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
17:38:29,511 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
17:38:29,511 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
17:38:29,511 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
17:38:29,512 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:29,513 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
17:38:29,515 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
17:38:29,515 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
17:38:29,515 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
17:38:29,516 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
17:38:29,516 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
17:38:29,516 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
17:38:29,516 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
17:38:29,516 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:29,516 (main) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:29,522 (main) DEBUG [DataNucleus.Datastore] - Removing RDBMS support for Java type java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
17:38:29,522 (main) DEBUG [DataNucleus.Datastore] - Removing RDBMS support for Java type java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
17:38:29,550 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DELETEME1459784309540.UNUSED" added to internal representation of table.
17:38:29,553 (main) DEBUG [DataNucleus.Datastore.Schema] - Creating table DELETEME1459784309540
17:38:29,558 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE DELETEME1459784309540
(
    UNUSED INTEGER NOT NULL
)
17:38:29,559 (main) DEBUG [DataNucleus.Datastore.Schema] - Execution Time = 1 ms
17:38:29,561 (main) DEBUG [DataNucleus.Datastore.Schema] - Dropping table DELETEME1459784309540
17:38:29,561 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE DELETEME1459784309540
17:38:29,562 (main) DEBUG [DataNucleus.Datastore.Schema] - Execution Time = 1 ms
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.H2Adapter
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="H2" version="1.3.168 (2012-07-13)"
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="H2 JDBC Driver" version="1.3.168 (2012-07-13)"
17:38:29,562 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:h2:tcp://localhost/~/IdeaProjects/ntbd/data/db]
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:h2:tcp://localhost/~/IdeaProjects/ntbd/data/db]
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case=UPPERCASE catalog=DB schema=PUBLIC
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : "MixedCase" UPPERCASE "MixedCase-Sensitive" 
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=128 Column=128 Constraint=128 Index=128 Delimiter="
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=true
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, BOOLEAN, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, [id=-10], CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, ARRAY, REAL, OTHER, DOUBLE, DATE, TIME, TIMESTAMP
17:38:29,563 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
17:38:29,563 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@27d415d9 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@221af3c0, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
17:38:29,564 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@27d415d9 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@221af3c0, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
17:38:29,564 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
17:38:29,566 (main) DEBUG [DataNucleus.Cache] - Level 2 Cache of type "soft" initialised
17:38:29,567 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Version "4.1.9" with JRE "1.8.0_73" on "Windows 10"
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - Persistence-Unit : Tutorial
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : default
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Belgrade
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
17:38:29,572 (main) DEBUG [DataNucleus.Persistence] - ================================================
17:38:29,573 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Handling schema for persistence-unit "Tutorial"
17:38:29,587 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Task [Table : TASK, InheritanceStrategy : new-table]
17:38:29,588 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.TASK_ID" added to internal representation of table.
17:38:29,589 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [TASK.TASK_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,591 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Project [Table : PROJECTS, InheritanceStrategy : new-table]
17:38:29,591 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.PROJECTS_ID" added to internal representation of table.
17:38:29,591 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [PROJECTS.PROJECTS_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,591 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Employee [Table : EMPLOYEES, InheritanceStrategy : new-table]
17:38:29,591 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.EMPLOYEES_ID" added to internal representation of table.
17:38:29,591 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [EMPLOYEES.EMPLOYEES_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,592 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Department [Table : DEPARTMENT, InheritanceStrategy : new-table]
17:38:29,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.DEPARTMENT_ID" added to internal representation of table.
17:38:29,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [DEPARTMENT.DEPARTMENT_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,592 (main) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Address [Table : ADDRESS, InheritanceStrategy : new-table]
17:38:29,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.ADDRESS_ID" added to internal representation of table.
17:38:29,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [ADDRESS.ADDRESS_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,593 (main) DEBUG [DataNucleus.Datastore.Schema] - Table TASK will manage the persistence of the fields for class employee.Task (inheritance strategy="new-table") 
17:38:29,593 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.DESCRIPTION" added to internal representation of table.
17:38:29,595 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.description] -> Column(s) [TASK.DESCRIPTION] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,596 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.ENDDATE" added to internal representation of table.
17:38:29,596 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.endDate] -> Column(s) [TASK.ENDDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
17:38:29,597 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.PROJECT_PROJECTS_ID_OID" added to internal representation of table.
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.project] -> Column(s) [TASK.PROJECT_PROJECTS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.STARTDATE" added to internal representation of table.
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.startDate] -> Column(s) [TASK.STARTDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View TASK has been initialised
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Table ADDRESS will manage the persistence of the fields for class employee.Address (inheritance strategy="new-table") 
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.CITY" added to internal representation of table.
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.city] -> Column(s) [ADDRESS.CITY] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.DEPARTMENT_DEPARTMENT_ID_OID" added to internal representation of table.
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.department] -> Column(s) [ADDRESS.DEPARTMENT_DEPARTMENT_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.POSTCODE" added to internal representation of table.
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.postcode] -> Column(s) [ADDRESS.POSTCODE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.STREET" added to internal representation of table.
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.street] -> Column(s) [ADDRESS.STREET] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View ADDRESS has been initialised
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Table DEPARTMENT will manage the persistence of the fields for class employee.Department (inheritance strategy="new-table") 
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.ADDRESS_ADDRESS_ID_OID" added to internal representation of table.
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.address] -> Column(s) [DEPARTMENT.ADDRESS_ADDRESS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.HEAD_EMPLOYEES_ID_OID" added to internal representation of table.
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.head] -> Column(s) [DEPARTMENT.HEAD_EMPLOYEES_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT."NAME"" added to internal representation of table.
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.name] -> Column(s) [DEPARTMENT."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View DEPARTMENT has been initialised
17:38:29,600 (main) DEBUG [DataNucleus.Datastore.Schema] - Table PROJECTS will manage the persistence of the fields for class employee.Project (inheritance strategy="new-table") 
17:38:29,602 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.employee] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
17:38:29,602 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS."NAME"" added to internal representation of table.
17:38:29,603 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.name] -> Column(s) [PROJECTS."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,603 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.SUBJECT" added to internal representation of table.
17:38:29,603 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.subject] -> Column(s) [PROJECTS.SUBJECT] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,603 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.task] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
17:38:29,603 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.TASK_PROJECTS_ID_OID" added to internal representation of table.
17:38:29,603 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View PROJECTS has been initialised
17:38:29,603 (main) DEBUG [DataNucleus.Datastore.Schema] - Table EMPLOYEES will manage the persistence of the fields for class employee.Employee (inheritance strategy="new-table") 
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.DEPARTMENT" added to internal representation of table.
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.department] -> Column(s) [EMPLOYEES.DEPARTMENT] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.HIREDATE" added to internal representation of table.
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.hiredate] -> Column(s) [EMPLOYEES.HIREDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.JOB" added to internal representation of table.
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.job] -> Column(s) [EMPLOYEES.JOB] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES."NAME"" added to internal representation of table.
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.name] -> Column(s) [EMPLOYEES."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:29,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.project] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
17:38:29,605 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.PROJECT_EMPLOYEES_ID_OID" added to internal representation of table.
17:38:29,605 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.SALARY" added to internal representation of table.
17:38:29,605 (main) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.salary] -> Column(s) [EMPLOYEES.SALARY] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DoubleMapping" (org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping)
17:38:29,606 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View EMPLOYEES has been initialised
17:38:29,606 (main) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.EMPLOYEE_PROJECTS_ID_OID" added to internal representation of table.
17:38:29,608 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@8e0379d [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened with isolation level "serializable" and auto-commit=false
17:38:29,608 (main) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction started with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@341b80b2" with isolation "serializable"
17:38:29,609 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of TASK returned table type of TABLE
17:38:29,610 (main) DEBUG [DataNucleus.Datastore.Schema] - Loading column info for table(s) "TASK, EMPLOYEES, PROJECTS, ADDRESS, DEPARTMENT" in Catalog "", Schema ""
17:38:29,623 (main) DEBUG [DataNucleus.Datastore.Schema] - Column info loaded for Catalog "", Schema "", 5 tables, time = 13 ms
17:38:29,623 (main) DEBUG [DataNucleus.Datastore.Schema] - Column info retrieved for table "TASK" : 6 columns found
17:38:29,624 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of ADDRESS returned table type of TABLE
17:38:29,625 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of DEPARTMENT returned table type of TABLE
17:38:29,626 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of PROJECTS returned table type of TABLE
17:38:29,627 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of EMPLOYEES returned table type of TABLE
17:38:29,631 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table TASK
17:38:29,638 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table TASK
17:38:29,640 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table TASK
17:38:29,642 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 index(es) for table ADDRESS
17:38:29,643 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 foreign key(s) for table ADDRESS
17:38:29,644 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table ADDRESS
17:38:29,646 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table DEPARTMENT
17:38:29,647 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table DEPARTMENT
17:38:29,648 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table DEPARTMENT
17:38:29,649 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 index(es) for table PROJECTS
17:38:29,650 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 foreign key(s) for table PROJECTS
17:38:29,651 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table PROJECTS
17:38:29,652 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table EMPLOYEES
17:38:29,654 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table EMPLOYEES
17:38:29,655 (main) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table EMPLOYEES
17:38:29,655 (main) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction committing with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@341b80b2"
17:38:29,656 (main) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction closing with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@341b80b2"
17:38:29,656 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@8e0379d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@341b80b2, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
17:38:29,656 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@8e0379d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@341b80b2, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
17:38:29,657 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool completed successfully
17:38:29,657 (main) DEBUG [DataNucleus.Connection] - Closing Connection Pool tx
17:38:29,657 (main) DEBUG [DataNucleus.Connection] - Closing Connection Pool nontx
17:38:29,658 (main) DEBUG [DataNucleus.Persistence] - Unmanaging Persistence of all classes
17:38:30,047 (test.Lista4.main()) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
17:38:30,087 (test.Lista4.main()) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.1.9 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar.
17:38:30,120 (test.Lista4.main()) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar!/plugin.xml.
17:38:30,143 (test.Lista4.main()) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-core/4.1.9/datanucleus-core-4.1.9.jar!/plugin.xml.
17:38:30,149 (test.Lista4.main()) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.1.1 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar.
17:38:30,151 (test.Lista4.main()) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
17:38:30,153 (test.Lista4.main()) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-api-jdo/4.1.1/datanucleus-api-jdo-4.1.1.jar!/plugin.xml.
17:38:30,155 (test.Lista4.main()) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.1.11 at URL file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar.
17:38:30,171 (test.Lista4.main()) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar!/plugin.xml.
17:38:30,184 (test.Lista4.main()) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/pawelwiejkut/.m2/repository/org/datanucleus/datanucleus-rdbms/4.1.11/datanucleus-rdbms-4.1.11.jar!/plugin.xml.
17:38:30,220 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Java types support initialising ...
17:38:30,268 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Java types support loaded : supported java types=[B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
17:38:30,269 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Type converter support initialising ...
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Type converter support loaded
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
17:38:30,301 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
17:38:30,302 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
17:38:30,303 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
17:38:30,303 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,java.sql.Timestamp,[Ljava.lang.Object;,java.lang.String
17:38:30,303 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
17:38:30,303 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
17:38:30,303 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
17:38:30,303 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
17:38:30,303 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
17:38:30,303 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
17:38:30,308 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/META-INF/persistence.xml" using handler "persistence" (validation="false")
17:38:30,319 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - MetaData Management : Loading Metadata for persistence-unit "Tutorial" ...
17:38:30,364 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Address" has been specified with JDO annotations so using those.
17:38:30,368 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Task" has been specified with JDO annotations so using those.
17:38:30,369 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Department" has been specified with JDO annotations so using those.
17:38:30,371 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Project" has been specified with JDO annotations so using those.
17:38:30,372 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" has been specified with JDO annotations so using those.
17:38:30,373 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Populating all MetaData ...
17:38:30,373 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Populating Meta-Data
17:38:30,374 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" NOT found at /META-INF/package-h2.orm
17:38:30,375 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" NOT found at /WEB-INF/package-h2.orm
17:38:30,375 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Parsing MetaData file "file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/package-h2.orm" using handler "jdo" (validation="false")
17:38:30,385 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - XML Entity Public="" System="file:/javax/jdo/orm.dtd" : using local source "/org/datanucleus/api/jdo/jdo_orm_3_1.dtd"
17:38:30,401 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - MetaData of type "orm" for class "employee.Address" will use file:/C:/Users/pawelwiejkut/IdeaProjects/ntbd/target/classes/package-h2.orm
17:38:30,403 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - File "" is having internal MetaData definition updated with ORM information
17:38:30,403 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Address" is having internal MetaData definition updated with ORM information
17:38:30,404 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Populating Meta-Data
17:38:30,405 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Task" is having internal MetaData definition updated with ORM information
17:38:30,405 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Populating Meta-Data
17:38:30,405 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Department" is having internal MetaData definition updated with ORM information
17:38:30,405 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Populating Meta-Data
17:38:30,405 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Project" is having internal MetaData definition updated with ORM information
17:38:30,406 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Populating Meta-Data
17:38:30,406 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" is having internal MetaData definition updated with ORM information
17:38:30,406 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Initialising all MetaData ...
17:38:30,407 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Address" : Initialising Meta-Data
17:38:30,408 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Task" : Initialising Meta-Data
17:38:30,408 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Department" : Initialising Meta-Data
17:38:30,408 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Project" : Initialising Meta-Data
17:38:30,409 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - Class "employee.Employee" : Initialising Meta-Data
17:38:30,409 (test.Lista4.main()) DEBUG [DataNucleus.MetaData] - MetaData Management : Load of Metadata complete
17:38:30,411 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
17:38:30,464 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - Created tx data source using pooling type of dbcp-builtin
17:38:30,464 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - Registered transactional connection factory under name "rdbms/tx"
17:38:30,465 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - Registered nontransactional connection factory under name "rdbms/nontx"
17:38:30,508 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - Created nontx data source using pooling type of dbcp-builtin
17:38:30,612 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@79ad002b [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened
17:38:30,658 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:30,658 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=true)
17:38:30,659 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
17:38:30,660 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
17:38:30,660 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
17:38:30,660 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
17:38:30,660 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
17:38:30,661 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
17:38:30,661 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
17:38:30,662 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
17:38:30,662 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
17:38:30,662 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
17:38:30,663 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
17:38:30,663 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
17:38:30,663 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
17:38:30,664 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
17:38:30,665 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
17:38:30,665 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:30,665 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:30,665 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
17:38:30,666 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
17:38:30,667 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
17:38:30,670 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
17:38:30,670 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
17:38:30,670 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
17:38:30,670 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
17:38:30,670 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
17:38:30,671 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
17:38:30,671 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
17:38:30,671 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:30,671 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:30,671 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.sql.Timestamp (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:30,672 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:30,673 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
17:38:30,673 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
17:38:30,673 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
17:38:30,673 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
17:38:30,674 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
17:38:30,674 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
17:38:30,675 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
17:38:30,675 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
17:38:30,675 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
17:38:30,675 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
17:38:30,675 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Adding RDBMS support for Java type org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
17:38:30,681 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Removing RDBMS support for Java type java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
17:38:30,681 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Removing RDBMS support for Java type java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
17:38:30,709 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DELETEME1459784310699.UNUSED" added to internal representation of table.
17:38:30,712 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Creating table DELETEME1459784310699
17:38:30,718 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE DELETEME1459784310699
(
    UNUSED INTEGER NOT NULL
)
17:38:30,718 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Execution Time = 0 ms
17:38:30,722 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Dropping table DELETEME1459784310699
17:38:30,722 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE DELETEME1459784310699
17:38:30,723 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Execution Time = 1 ms
17:38:30,723 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
17:38:30,723 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
17:38:30,723 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Datastore : read-write
17:38:30,723 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
17:38:30,723 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - ===========================================================
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.H2Adapter
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Datastore : name="H2" version="1.3.168 (2012-07-13)"
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="H2 JDBC Driver" version="1.3.168 (2012-07-13)"
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:h2:tcp://localhost/~/IdeaProjects/ntbd/data/db]
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:h2:tcp://localhost/~/IdeaProjects/ntbd/data/db]
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case=UPPERCASE catalog=DB schema=PUBLIC
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : "MixedCase" UPPERCASE "MixedCase-Sensitive" 
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=128 Column=128 Constraint=128 Index=128 Delimiter="
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=true
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
17:38:30,724 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
17:38:30,725 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
17:38:30,725 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, BOOLEAN, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, [id=-10], CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, ARRAY, REAL, OTHER, DOUBLE, DATE, TIME, TIMESTAMP
17:38:30,725 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - ===========================================================
17:38:30,725 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@79ad002b [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@74aa7093, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
17:38:30,726 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@79ad002b [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@74aa7093, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
17:38:30,727 (test.Lista4.main()) DEBUG [DataNucleus.Datastore] - StoreManager now created
17:38:30,729 (test.Lista4.main()) DEBUG [DataNucleus.Cache] - Level 2 Cache of type "soft" initialised
17:38:30,731 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
17:38:30,746 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
17:38:30,746 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Version "4.1.9" with JRE "1.8.0_65" on "Windows 10"
17:38:30,746 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
17:38:30,746 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Persistence-Unit : Tutorial
17:38:30,746 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
17:38:30,746 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - ClassLoading : default
17:38:30,747 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Belgrade
17:38:30,747 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
17:38:30,747 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
17:38:30,747 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
17:38:30,747 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - ================================================
17:38:30,769 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@412d140c" opened for datastore "org.datanucleus.store.rdbms.RDBMSStoreManager@7466ec1a" with txn="org.datanucleus.TransactionImpl@34b6fb13"
17:38:30,771 (test.Lista4.main()) DEBUG [DataNucleus.Cache] - Level 1 Cache of type "soft" initialised
17:38:36,189 (test.Lista4.main()) DEBUG [DataNucleus.Cache] - Query Cache of type "org.datanucleus.query.cache.SoftQueryCompilationCache" initialised
17:38:36,190 (test.Lista4.main()) DEBUG [DataNucleus.Cache] - Query Cache of type "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" initialised
17:38:36,192 (test.Lista4.main()) DEBUG [DataNucleus.Cache] - Query Cache of type "org.datanucleus.store.query.cache.SoftQueryResultsCache" initialised
17:38:38,041 (test.Lista4.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Compiling "SELECT project FROM employee.Employee WHERE department.address.city=="Commerce""
17:38:38,087 (test.Lista4.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Compile Time = 46 ms
17:38:38,087 (test.Lista4.main()) DEBUG [DataNucleus.Query] - QueryCompilation:
  [result:PrimaryExpression{project}]
  [filter:DyadicExpression{PrimaryExpression{department.address.city}  =  Literal{Commerce}}]
  [symbols: this type=employee.Employee]
17:38:38,091 (test.Lista4.main()) DEBUG [DataNucleus.Query] - JDOQL Query : Compiling "SELECT project FROM employee.Employee WHERE department.address.city=="Commerce"" for datastore
17:38:38,125 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Address [Table : ADDRESS, InheritanceStrategy : new-table]
17:38:38,127 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.ADDRESS_ID" added to internal representation of table.
17:38:38,128 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [ADDRESS.ADDRESS_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,131 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Department [Table : DEPARTMENT, InheritanceStrategy : new-table]
17:38:38,132 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.DEPARTMENT_ID" added to internal representation of table.
17:38:38,133 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [DEPARTMENT.DEPARTMENT_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,134 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Task [Table : TASK, InheritanceStrategy : new-table]
17:38:38,135 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.TASK_ID" added to internal representation of table.
17:38:38,136 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [TASK.TASK_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,137 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Project [Table : PROJECTS, InheritanceStrategy : new-table]
17:38:38,138 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.PROJECTS_ID" added to internal representation of table.
17:38:38,139 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [PROJECTS.PROJECTS_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,139 (test.Lista4.main()) DEBUG [DataNucleus.Persistence] - Managing Persistence of Class : employee.Employee [Table : EMPLOYEES, InheritanceStrategy : new-table]
17:38:38,141 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.EMPLOYEES_ID" added to internal representation of table.
17:38:38,142 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [DATASTORE_ID] -> Column(s) [EMPLOYEES.EMPLOYEES_ID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DatastoreIdMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,143 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table ADDRESS will manage the persistence of the fields for class employee.Address (inheritance strategy="new-table") 
17:38:38,143 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.CITY" added to internal representation of table.
17:38:38,148 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.city] -> Column(s) [ADDRESS.CITY] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,154 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.DEPARTMENT_DEPARTMENT_ID_OID" added to internal representation of table.
17:38:38,155 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.department] -> Column(s) [ADDRESS.DEPARTMENT_DEPARTMENT_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,156 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.POSTCODE" added to internal representation of table.
17:38:38,156 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.postcode] -> Column(s) [ADDRESS.POSTCODE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,157 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "ADDRESS.STREET" added to internal representation of table.
17:38:38,158 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Address.street] -> Column(s) [ADDRESS.STREET] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,159 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View ADDRESS has been initialised
17:38:38,159 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table TASK will manage the persistence of the fields for class employee.Task (inheritance strategy="new-table") 
17:38:38,160 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.DESCRIPTION" added to internal representation of table.
17:38:38,161 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.description] -> Column(s) [TASK.DESCRIPTION] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,161 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.ENDDATE" added to internal representation of table.
17:38:38,162 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.endDate] -> Column(s) [TASK.ENDDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
17:38:38,163 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.PROJECT_PROJECTS_ID_OID" added to internal representation of table.
17:38:38,164 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.project] -> Column(s) [TASK.PROJECT_PROJECTS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,164 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.STARTDATE" added to internal representation of table.
17:38:38,165 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Task.startDate] -> Column(s) [TASK.STARTDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
17:38:38,165 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View TASK has been initialised
17:38:38,165 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table DEPARTMENT will manage the persistence of the fields for class employee.Department (inheritance strategy="new-table") 
17:38:38,166 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.ADDRESS_ADDRESS_ID_OID" added to internal representation of table.
17:38:38,167 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.address] -> Column(s) [DEPARTMENT.ADDRESS_ADDRESS_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,168 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT.HEAD_EMPLOYEES_ID_OID" added to internal representation of table.
17:38:38,169 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.head] -> Column(s) [DEPARTMENT.HEAD_EMPLOYEES_ID_OID] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,169 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "DEPARTMENT."NAME"" added to internal representation of table.
17:38:38,170 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Department.name] -> Column(s) [DEPARTMENT."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,170 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View DEPARTMENT has been initialised
17:38:38,170 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table PROJECTS will manage the persistence of the fields for class employee.Project (inheritance strategy="new-table") 
17:38:38,175 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.employee] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
17:38:38,175 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS."NAME"" added to internal representation of table.
17:38:38,176 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.name] -> Column(s) [PROJECTS."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,176 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.SUBJECT" added to internal representation of table.
17:38:38,177 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.subject] -> Column(s) [PROJECTS.SUBJECT] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,177 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Project.task] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
17:38:38,179 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "TASK.TASK_PROJECTS_ID_OID" added to internal representation of table.
17:38:38,179 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View PROJECTS has been initialised
17:38:38,180 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table EMPLOYEES will manage the persistence of the fields for class employee.Employee (inheritance strategy="new-table") 
17:38:38,180 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.DEPARTMENT" added to internal representation of table.
17:38:38,181 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.department] -> Column(s) [EMPLOYEES.DEPARTMENT] using mapping of type "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
17:38:38,181 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.HIREDATE" added to internal representation of table.
17:38:38,181 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.hiredate] -> Column(s) [EMPLOYEES.HIREDATE] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DateMapping" (org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping)
17:38:38,182 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.JOB" added to internal representation of table.
17:38:38,182 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.job] -> Column(s) [EMPLOYEES.JOB] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,183 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES."NAME"" added to internal representation of table.
17:38:38,183 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.name] -> Column(s) [EMPLOYEES."NAME"] using mapping of type "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
17:38:38,184 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.project] -> Column(s) [[none]] using mapping of type "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
17:38:38,185 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "PROJECTS.PROJECT_EMPLOYEES_ID_OID" added to internal representation of table.
17:38:38,186 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.SALARY" added to internal representation of table.
17:38:38,187 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Field [employee.Employee.salary] -> Column(s) [EMPLOYEES.SALARY] using mapping of type "org.datanucleus.store.rdbms.mapping.java.DoubleMapping" (org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping)
17:38:38,187 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Table/View EMPLOYEES has been initialised
17:38:38,188 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column "EMPLOYEES.EMPLOYEE_PROJECTS_ID_OID" added to internal representation of table.
17:38:38,193 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6261200a [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" opened with isolation level "serializable" and auto-commit=false
17:38:38,194 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction started with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c2621d5" with isolation "serializable"
17:38:38,198 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of ADDRESS returned table type of TABLE
17:38:38,200 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Loading column info for table(s) "TASK, EMPLOYEES, PROJECTS, ADDRESS, DEPARTMENT" in Catalog "", Schema ""
17:38:38,319 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column info loaded for Catalog "", Schema "", 5 tables, time = 119 ms
17:38:38,320 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Column info retrieved for table "ADDRESS" : 5 columns found
17:38:38,324 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of TASK returned table type of TABLE
17:38:38,328 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of DEPARTMENT returned table type of TABLE
17:38:38,333 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of PROJECTS returned table type of TABLE
17:38:38,337 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of EMPLOYEES returned table type of TABLE
17:38:38,348 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 index(es) for table ADDRESS
17:38:38,364 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 foreign key(s) for table ADDRESS
17:38:38,371 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table ADDRESS
17:38:38,376 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table TASK
17:38:38,383 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table TASK
17:38:38,388 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table TASK
17:38:38,394 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table DEPARTMENT
17:38:38,400 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table DEPARTMENT
17:38:38,405 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table DEPARTMENT
17:38:38,410 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 index(es) for table PROJECTS
17:38:38,415 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 foreign key(s) for table PROJECTS
17:38:38,420 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table PROJECTS
17:38:38,426 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 3 index(es) for table EMPLOYEES
17:38:38,432 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 2 foreign key(s) for table EMPLOYEES
17:38:38,437 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Validating 1 unique key(s) for table EMPLOYEES
17:38:38,438 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction committing with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c2621d5"
17:38:38,438 (test.Lista4.main()) DEBUG [DataNucleus.Datastore.Schema] - Schema Transaction closing with connection "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c2621d5"
17:38:38,439 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6261200a [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c2621d5, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" is being committed.
17:38:38,439 (test.Lista4.main()) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6261200a [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c2621d5, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" closed
17:38:38,523 (test.Lista4.main()) INFO  [DataNucleus.JDO] - Exception thrown
Cannot select multi-valued objects in a result clause of a query
org.datanucleus.exceptions.NucleusUserException: Cannot select multi-valued objects in a result clause of a query
	at org.datanucleus.store.rdbms.query.QueryToSQLMapper.validateExpressionForResult(QueryToSQLMapper.java:956)
	at org.datanucleus.store.rdbms.query.QueryToSQLMapper.compileResult(QueryToSQLMapper.java:762)
	at org.datanucleus.store.rdbms.query.QueryToSQLMapper.compile(QueryToSQLMapper.java:439)
	at org.datanucleus.store.rdbms.query.JDOQLQuery.compileQueryFull(JDOQLQuery.java:886)
	at org.datanucleus.store.rdbms.query.JDOQLQuery.compileInternal(JDOQLQuery.java:346)
	at org.datanucleus.store.query.Query.executeQuery(Query.java:1816)
	at org.datanucleus.store.query.Query.executeWithArray(Query.java:1744)
	at org.datanucleus.store.query.Query.execute(Query.java:1726)
	at org.datanucleus.api.jdo.JDOQuery.execute(JDOQuery.java:233)
	at test.Lista4.exercise2a(Lista4.java:34)
	at test.Lista4.main(Lista4.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:290)
	at java.lang.Thread.run(Thread.java:745)
